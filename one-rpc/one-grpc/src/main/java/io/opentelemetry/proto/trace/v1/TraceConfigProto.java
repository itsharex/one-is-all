// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: opentelemetry/proto/trace/v1/trace_config.proto

package io.opentelemetry.proto.trace.v1;

public final class TraceConfigProto {
    private TraceConfigProto() {
    }

    public static void registerAllExtensions(
            com.google.protobuf.ExtensionRegistryLite registry) {
    }

    public static void registerAllExtensions(
            com.google.protobuf.ExtensionRegistry registry) {
        registerAllExtensions(
                (com.google.protobuf.ExtensionRegistryLite) registry);
    }

    static final com.google.protobuf.Descriptors.Descriptor
            internal_static_opentelemetry_proto_trace_v1_TraceConfig_descriptor;
    static final
    com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
            internal_static_opentelemetry_proto_trace_v1_TraceConfig_fieldAccessorTable;
    static final com.google.protobuf.Descriptors.Descriptor
            internal_static_opentelemetry_proto_trace_v1_ConstantSampler_descriptor;
    static final
    com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
            internal_static_opentelemetry_proto_trace_v1_ConstantSampler_fieldAccessorTable;
    static final com.google.protobuf.Descriptors.Descriptor
            internal_static_opentelemetry_proto_trace_v1_TraceIdRatioBased_descriptor;
    static final
    com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
            internal_static_opentelemetry_proto_trace_v1_TraceIdRatioBased_fieldAccessorTable;
    static final com.google.protobuf.Descriptors.Descriptor
            internal_static_opentelemetry_proto_trace_v1_RateLimitingSampler_descriptor;
    static final
    com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
            internal_static_opentelemetry_proto_trace_v1_RateLimitingSampler_fieldAccessorTable;

    public static com.google.protobuf.Descriptors.FileDescriptor
    getDescriptor() {
        return descriptor;
    }

    private static com.google.protobuf.Descriptors.FileDescriptor
            descriptor;

    static {
        String[] descriptorData = {
                "\n/opentelemetry/proto/trace/v1/trace_con" +
                        "fig.proto\022\034opentelemetry.proto.trace.v1\"" +
                        "\310\003\n\013TraceConfig\022I\n\020constant_sampler\030\001 \001(" +
                        "\0132-.opentelemetry.proto.trace.v1.Constan" +
                        "tSamplerH\000\022O\n\024trace_id_ratio_based\030\002 \001(\013" +
                        "2/.opentelemetry.proto.trace.v1.TraceIdR" +
                        "atioBasedH\000\022R\n\025rate_limiting_sampler\030\003 \001" +
                        "(\01321.opentelemetry.proto.trace.v1.RateLi" +
                        "mitingSamplerH\000\022 \n\030max_number_of_attribu" +
                        "tes\030\004 \001(\003\022\"\n\032max_number_of_timed_events\030" +
                        "\005 \001(\003\0220\n(max_number_of_attributes_per_ti" +
                        "med_event\030\006 \001(\003\022\033\n\023max_number_of_links\030\007" +
                        " \001(\003\022)\n!max_number_of_attributes_per_lin" +
                        "k\030\010 \001(\003B\t\n\007sampler\"\251\001\n\017ConstantSampler\022P" +
                        "\n\010decision\030\001 \001(\0162>.opentelemetry.proto.t" +
                        "race.v1.ConstantSampler.ConstantDecision" +
                        "\"D\n\020ConstantDecision\022\016\n\nALWAYS_OFF\020\000\022\r\n\t" +
                        "ALWAYS_ON\020\001\022\021\n\rALWAYS_PARENT\020\002\"*\n\021TraceI" +
                        "dRatioBased\022\025\n\rsamplingRatio\030\001 \001(\001\"\"\n\023Ra" +
                        "teLimitingSampler\022\013\n\003qps\030\001 \001(\003B~\n\037io.ope" +
                        "ntelemetry.proto.trace.v1B\020TraceConfigPr" +
                        "otoP\001ZGgithub.com/open-telemetry/opentel" +
                        "emetry-proto/gen/go/collector/trace/v1b\006" +
                        "proto3"
        };
        descriptor = com.google.protobuf.Descriptors.FileDescriptor
                .internalBuildGeneratedFileFrom(descriptorData,
                        new com.google.protobuf.Descriptors.FileDescriptor[]{
                        });
        internal_static_opentelemetry_proto_trace_v1_TraceConfig_descriptor =
                getDescriptor().getMessageTypes().get(0);
        internal_static_opentelemetry_proto_trace_v1_TraceConfig_fieldAccessorTable = new
                com.google.protobuf.GeneratedMessageV3.FieldAccessorTable(
                internal_static_opentelemetry_proto_trace_v1_TraceConfig_descriptor,
                new String[]{"ConstantSampler", "TraceIdRatioBased", "RateLimitingSampler", "MaxNumberOfAttributes", "MaxNumberOfTimedEvents", "MaxNumberOfAttributesPerTimedEvent", "MaxNumberOfLinks", "MaxNumberOfAttributesPerLink", "Sampler",});
        internal_static_opentelemetry_proto_trace_v1_ConstantSampler_descriptor =
                getDescriptor().getMessageTypes().get(1);
        internal_static_opentelemetry_proto_trace_v1_ConstantSampler_fieldAccessorTable = new
                com.google.protobuf.GeneratedMessageV3.FieldAccessorTable(
                internal_static_opentelemetry_proto_trace_v1_ConstantSampler_descriptor,
                new String[]{"Decision",});
        internal_static_opentelemetry_proto_trace_v1_TraceIdRatioBased_descriptor =
                getDescriptor().getMessageTypes().get(2);
        internal_static_opentelemetry_proto_trace_v1_TraceIdRatioBased_fieldAccessorTable = new
                com.google.protobuf.GeneratedMessageV3.FieldAccessorTable(
                internal_static_opentelemetry_proto_trace_v1_TraceIdRatioBased_descriptor,
                new String[]{"SamplingRatio",});
        internal_static_opentelemetry_proto_trace_v1_RateLimitingSampler_descriptor =
                getDescriptor().getMessageTypes().get(3);
        internal_static_opentelemetry_proto_trace_v1_RateLimitingSampler_fieldAccessorTable = new
                com.google.protobuf.GeneratedMessageV3.FieldAccessorTable(
                internal_static_opentelemetry_proto_trace_v1_RateLimitingSampler_descriptor,
                new String[]{"Qps",});
    }

    // @@protoc_insertion_point(outer_class_scope)
}
