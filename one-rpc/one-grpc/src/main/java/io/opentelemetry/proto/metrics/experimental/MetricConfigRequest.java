// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: opentelemetry/proto/metrics/experimental/metrics_config_service.proto

package io.opentelemetry.proto.metrics.experimental;

/**
 * Protobuf type {@code opentelemetry.proto.metrics.experimental.MetricConfigRequest}
 */
public final class MetricConfigRequest extends
        com.google.protobuf.GeneratedMessageV3 implements
        // @@protoc_insertion_point(message_implements:opentelemetry.proto.metrics.experimental.MetricConfigRequest)
        MetricConfigRequestOrBuilder {
    private static final long serialVersionUID = 0L;

    // Use MetricConfigRequest.newBuilder() to construct.
    private MetricConfigRequest(com.google.protobuf.GeneratedMessageV3.Builder<?> builder) {
        super(builder);
    }

    private MetricConfigRequest() {
        lastKnownFingerprint_ = com.google.protobuf.ByteString.EMPTY;
    }

    @Override
    @SuppressWarnings({"unused"})
    protected Object newInstance(
            UnusedPrivateParameter unused) {
        return new MetricConfigRequest();
    }

    @Override
    public final com.google.protobuf.UnknownFieldSet
    getUnknownFields() {
        return this.unknownFields;
    }

    private MetricConfigRequest(
            com.google.protobuf.CodedInputStream input,
            com.google.protobuf.ExtensionRegistryLite extensionRegistry)
            throws com.google.protobuf.InvalidProtocolBufferException {
        this();
        if (extensionRegistry == null) {
            throw new NullPointerException();
        }
        com.google.protobuf.UnknownFieldSet.Builder unknownFields =
                com.google.protobuf.UnknownFieldSet.newBuilder();
        try {
            boolean done = false;
            while (!done) {
                int tag = input.readTag();
                switch (tag) {
                    case 0:
                        done = true;
                        break;
                    case 10: {
                        io.opentelemetry.proto.resource.v1.Resource.Builder subBuilder = null;
                        if (resource_ != null) {
                            subBuilder = resource_.toBuilder();
                        }
                        resource_ = input.readMessage(io.opentelemetry.proto.resource.v1.Resource.parser(), extensionRegistry);
                        if (subBuilder != null) {
                            subBuilder.mergeFrom(resource_);
                            resource_ = subBuilder.buildPartial();
                        }

                        break;
                    }
                    case 18: {

                        lastKnownFingerprint_ = input.readBytes();
                        break;
                    }
                    default: {
                        if (!parseUnknownField(
                                input, unknownFields, extensionRegistry, tag)) {
                            done = true;
                        }
                        break;
                    }
                }
            }
        } catch (com.google.protobuf.InvalidProtocolBufferException e) {
            throw e.setUnfinishedMessage(this);
        } catch (java.io.IOException e) {
            throw new com.google.protobuf.InvalidProtocolBufferException(
                    e).setUnfinishedMessage(this);
        } finally {
            this.unknownFields = unknownFields.build();
            makeExtensionsImmutable();
        }
    }

    public static final com.google.protobuf.Descriptors.Descriptor
    getDescriptor() {
        return MetricConfigServiceProto.internal_static_opentelemetry_proto_metrics_experimental_MetricConfigRequest_descriptor;
    }

    @Override
    protected FieldAccessorTable
    internalGetFieldAccessorTable() {
        return MetricConfigServiceProto.internal_static_opentelemetry_proto_metrics_experimental_MetricConfigRequest_fieldAccessorTable
                .ensureFieldAccessorsInitialized(
                        MetricConfigRequest.class, Builder.class);
    }

    public static final int RESOURCE_FIELD_NUMBER = 1;
    private io.opentelemetry.proto.resource.v1.Resource resource_;

    /**
     * <pre>
     * Required. The resource for which configuration should be returned.
     * </pre>
     *
     * <code>.opentelemetry.proto.resource.v1.Resource resource = 1;</code>
     *
     * @return Whether the resource field is set.
     */
    @Override
    public boolean hasResource() {
        return resource_ != null;
    }

    /**
     * <pre>
     * Required. The resource for which configuration should be returned.
     * </pre>
     *
     * <code>.opentelemetry.proto.resource.v1.Resource resource = 1;</code>
     *
     * @return The resource.
     */
    @Override
    public io.opentelemetry.proto.resource.v1.Resource getResource() {
        return resource_ == null ? io.opentelemetry.proto.resource.v1.Resource.getDefaultInstance() : resource_;
    }

    /**
     * <pre>
     * Required. The resource for which configuration should be returned.
     * </pre>
     *
     * <code>.opentelemetry.proto.resource.v1.Resource resource = 1;</code>
     */
    @Override
    public io.opentelemetry.proto.resource.v1.ResourceOrBuilder getResourceOrBuilder() {
        return getResource();
    }

    public static final int LAST_KNOWN_FINGERPRINT_FIELD_NUMBER = 2;
    private com.google.protobuf.ByteString lastKnownFingerprint_;

    /**
     * <pre>
     * Optional. The value of MetricConfigResponse.fingerprint for the last
     * configuration that the caller received and successfully applied.
     * </pre>
     *
     * <code>bytes last_known_fingerprint = 2;</code>
     *
     * @return The lastKnownFingerprint.
     */
    @Override
    public com.google.protobuf.ByteString getLastKnownFingerprint() {
        return lastKnownFingerprint_;
    }

    private byte memoizedIsInitialized = -1;

    @Override
    public final boolean isInitialized() {
        byte isInitialized = memoizedIsInitialized;
        if (isInitialized == 1) return true;
        if (isInitialized == 0) return false;

        memoizedIsInitialized = 1;
        return true;
    }

    @Override
    public void writeTo(com.google.protobuf.CodedOutputStream output)
            throws java.io.IOException {
        if (resource_ != null) {
            output.writeMessage(1, getResource());
        }
        if (!lastKnownFingerprint_.isEmpty()) {
            output.writeBytes(2, lastKnownFingerprint_);
        }
        unknownFields.writeTo(output);
    }

    @Override
    public int getSerializedSize() {
        int size = memoizedSize;
        if (size != -1) return size;

        size = 0;
        if (resource_ != null) {
            size += com.google.protobuf.CodedOutputStream
                    .computeMessageSize(1, getResource());
        }
        if (!lastKnownFingerprint_.isEmpty()) {
            size += com.google.protobuf.CodedOutputStream
                    .computeBytesSize(2, lastKnownFingerprint_);
        }
        size += unknownFields.getSerializedSize();
        memoizedSize = size;
        return size;
    }

    @Override
    public boolean equals(final Object obj) {
        if (obj == this) {
            return true;
        }
        if (!(obj instanceof MetricConfigRequest)) {
            return super.equals(obj);
        }
        MetricConfigRequest other = (MetricConfigRequest) obj;

        if (hasResource() != other.hasResource()) return false;
        if (hasResource()) {
            if (!getResource()
                    .equals(other.getResource())) return false;
        }
        if (!getLastKnownFingerprint()
                .equals(other.getLastKnownFingerprint())) return false;
        if (!unknownFields.equals(other.unknownFields)) return false;
        return true;
    }

    @Override
    public int hashCode() {
        if (memoizedHashCode != 0) {
            return memoizedHashCode;
        }
        int hash = 41;
        hash = (19 * hash) + getDescriptor().hashCode();
        if (hasResource()) {
            hash = (37 * hash) + RESOURCE_FIELD_NUMBER;
            hash = (53 * hash) + getResource().hashCode();
        }
        hash = (37 * hash) + LAST_KNOWN_FINGERPRINT_FIELD_NUMBER;
        hash = (53 * hash) + getLastKnownFingerprint().hashCode();
        hash = (29 * hash) + unknownFields.hashCode();
        memoizedHashCode = hash;
        return hash;
    }

    public static MetricConfigRequest parseFrom(
            java.nio.ByteBuffer data)
            throws com.google.protobuf.InvalidProtocolBufferException {
        return PARSER.parseFrom(data);
    }

    public static MetricConfigRequest parseFrom(
            java.nio.ByteBuffer data,
            com.google.protobuf.ExtensionRegistryLite extensionRegistry)
            throws com.google.protobuf.InvalidProtocolBufferException {
        return PARSER.parseFrom(data, extensionRegistry);
    }

    public static MetricConfigRequest parseFrom(
            com.google.protobuf.ByteString data)
            throws com.google.protobuf.InvalidProtocolBufferException {
        return PARSER.parseFrom(data);
    }

    public static MetricConfigRequest parseFrom(
            com.google.protobuf.ByteString data,
            com.google.protobuf.ExtensionRegistryLite extensionRegistry)
            throws com.google.protobuf.InvalidProtocolBufferException {
        return PARSER.parseFrom(data, extensionRegistry);
    }

    public static MetricConfigRequest parseFrom(byte[] data)
            throws com.google.protobuf.InvalidProtocolBufferException {
        return PARSER.parseFrom(data);
    }

    public static MetricConfigRequest parseFrom(
            byte[] data,
            com.google.protobuf.ExtensionRegistryLite extensionRegistry)
            throws com.google.protobuf.InvalidProtocolBufferException {
        return PARSER.parseFrom(data, extensionRegistry);
    }

    public static MetricConfigRequest parseFrom(java.io.InputStream input)
            throws java.io.IOException {
        return com.google.protobuf.GeneratedMessageV3
                .parseWithIOException(PARSER, input);
    }

    public static MetricConfigRequest parseFrom(
            java.io.InputStream input,
            com.google.protobuf.ExtensionRegistryLite extensionRegistry)
            throws java.io.IOException {
        return com.google.protobuf.GeneratedMessageV3
                .parseWithIOException(PARSER, input, extensionRegistry);
    }

    public static MetricConfigRequest parseDelimitedFrom(java.io.InputStream input)
            throws java.io.IOException {
        return com.google.protobuf.GeneratedMessageV3
                .parseDelimitedWithIOException(PARSER, input);
    }

    public static MetricConfigRequest parseDelimitedFrom(
            java.io.InputStream input,
            com.google.protobuf.ExtensionRegistryLite extensionRegistry)
            throws java.io.IOException {
        return com.google.protobuf.GeneratedMessageV3
                .parseDelimitedWithIOException(PARSER, input, extensionRegistry);
    }

    public static MetricConfigRequest parseFrom(
            com.google.protobuf.CodedInputStream input)
            throws java.io.IOException {
        return com.google.protobuf.GeneratedMessageV3
                .parseWithIOException(PARSER, input);
    }

    public static MetricConfigRequest parseFrom(
            com.google.protobuf.CodedInputStream input,
            com.google.protobuf.ExtensionRegistryLite extensionRegistry)
            throws java.io.IOException {
        return com.google.protobuf.GeneratedMessageV3
                .parseWithIOException(PARSER, input, extensionRegistry);
    }

    @Override
    public Builder newBuilderForType() {
        return newBuilder();
    }

    public static Builder newBuilder() {
        return DEFAULT_INSTANCE.toBuilder();
    }

    public static Builder newBuilder(MetricConfigRequest prototype) {
        return DEFAULT_INSTANCE.toBuilder().mergeFrom(prototype);
    }

    @Override
    public Builder toBuilder() {
        return this == DEFAULT_INSTANCE
                ? new Builder() : new Builder().mergeFrom(this);
    }

    @Override
    protected Builder newBuilderForType(
            BuilderParent parent) {
        Builder builder = new Builder(parent);
        return builder;
    }

    /**
     * Protobuf type {@code opentelemetry.proto.metrics.experimental.MetricConfigRequest}
     */
    public static final class Builder extends
            com.google.protobuf.GeneratedMessageV3.Builder<Builder> implements
            // @@protoc_insertion_point(builder_implements:opentelemetry.proto.metrics.experimental.MetricConfigRequest)
            MetricConfigRequestOrBuilder {
        public static final com.google.protobuf.Descriptors.Descriptor
        getDescriptor() {
            return MetricConfigServiceProto.internal_static_opentelemetry_proto_metrics_experimental_MetricConfigRequest_descriptor;
        }

        @Override
        protected FieldAccessorTable
        internalGetFieldAccessorTable() {
            return MetricConfigServiceProto.internal_static_opentelemetry_proto_metrics_experimental_MetricConfigRequest_fieldAccessorTable
                    .ensureFieldAccessorsInitialized(
                            MetricConfigRequest.class, Builder.class);
        }

        // Construct using io.opentelemetry.proto.metrics.experimental.MetricConfigRequest.newBuilder()
        private Builder() {
            maybeForceBuilderInitialization();
        }

        private Builder(
                BuilderParent parent) {
            super(parent);
            maybeForceBuilderInitialization();
        }

        private void maybeForceBuilderInitialization() {
            if (com.google.protobuf.GeneratedMessageV3
                    .alwaysUseFieldBuilders) {
            }
        }

        @Override
        public Builder clear() {
            super.clear();
            if (resourceBuilder_ == null) {
                resource_ = null;
            } else {
                resource_ = null;
                resourceBuilder_ = null;
            }
            lastKnownFingerprint_ = com.google.protobuf.ByteString.EMPTY;

            return this;
        }

        @Override
        public com.google.protobuf.Descriptors.Descriptor
        getDescriptorForType() {
            return MetricConfigServiceProto.internal_static_opentelemetry_proto_metrics_experimental_MetricConfigRequest_descriptor;
        }

        @Override
        public MetricConfigRequest getDefaultInstanceForType() {
            return MetricConfigRequest.getDefaultInstance();
        }

        @Override
        public MetricConfigRequest build() {
            MetricConfigRequest result = buildPartial();
            if (!result.isInitialized()) {
                throw newUninitializedMessageException(result);
            }
            return result;
        }

        @Override
        public MetricConfigRequest buildPartial() {
            MetricConfigRequest result = new MetricConfigRequest(this);
            if (resourceBuilder_ == null) {
                result.resource_ = resource_;
            } else {
                result.resource_ = resourceBuilder_.build();
            }
            result.lastKnownFingerprint_ = lastKnownFingerprint_;
            onBuilt();
            return result;
        }

        @Override
        public Builder clone() {
            return super.clone();
        }

        @Override
        public Builder setField(
                com.google.protobuf.Descriptors.FieldDescriptor field,
                Object value) {
            return super.setField(field, value);
        }

        @Override
        public Builder clearField(
                com.google.protobuf.Descriptors.FieldDescriptor field) {
            return super.clearField(field);
        }

        @Override
        public Builder clearOneof(
                com.google.protobuf.Descriptors.OneofDescriptor oneof) {
            return super.clearOneof(oneof);
        }

        @Override
        public Builder setRepeatedField(
                com.google.protobuf.Descriptors.FieldDescriptor field,
                int index, Object value) {
            return super.setRepeatedField(field, index, value);
        }

        @Override
        public Builder addRepeatedField(
                com.google.protobuf.Descriptors.FieldDescriptor field,
                Object value) {
            return super.addRepeatedField(field, value);
        }

        @Override
        public Builder mergeFrom(com.google.protobuf.Message other) {
            if (other instanceof MetricConfigRequest) {
                return mergeFrom((MetricConfigRequest) other);
            } else {
                super.mergeFrom(other);
                return this;
            }
        }

        public Builder mergeFrom(MetricConfigRequest other) {
            if (other == MetricConfigRequest.getDefaultInstance()) return this;
            if (other.hasResource()) {
                mergeResource(other.getResource());
            }
            if (other.getLastKnownFingerprint() != com.google.protobuf.ByteString.EMPTY) {
                setLastKnownFingerprint(other.getLastKnownFingerprint());
            }
            this.mergeUnknownFields(other.unknownFields);
            onChanged();
            return this;
        }

        @Override
        public final boolean isInitialized() {
            return true;
        }

        @Override
        public Builder mergeFrom(
                com.google.protobuf.CodedInputStream input,
                com.google.protobuf.ExtensionRegistryLite extensionRegistry)
                throws java.io.IOException {
            MetricConfigRequest parsedMessage = null;
            try {
                parsedMessage = PARSER.parsePartialFrom(input, extensionRegistry);
            } catch (com.google.protobuf.InvalidProtocolBufferException e) {
                parsedMessage = (MetricConfigRequest) e.getUnfinishedMessage();
                throw e.unwrapIOException();
            } finally {
                if (parsedMessage != null) {
                    mergeFrom(parsedMessage);
                }
            }
            return this;
        }

        private io.opentelemetry.proto.resource.v1.Resource resource_;
        private com.google.protobuf.SingleFieldBuilderV3<
                io.opentelemetry.proto.resource.v1.Resource, io.opentelemetry.proto.resource.v1.Resource.Builder, io.opentelemetry.proto.resource.v1.ResourceOrBuilder> resourceBuilder_;

        /**
         * <pre>
         * Required. The resource for which configuration should be returned.
         * </pre>
         *
         * <code>.opentelemetry.proto.resource.v1.Resource resource = 1;</code>
         *
         * @return Whether the resource field is set.
         */
        public boolean hasResource() {
            return resourceBuilder_ != null || resource_ != null;
        }

        /**
         * <pre>
         * Required. The resource for which configuration should be returned.
         * </pre>
         *
         * <code>.opentelemetry.proto.resource.v1.Resource resource = 1;</code>
         *
         * @return The resource.
         */
        public io.opentelemetry.proto.resource.v1.Resource getResource() {
            if (resourceBuilder_ == null) {
                return resource_ == null ? io.opentelemetry.proto.resource.v1.Resource.getDefaultInstance() : resource_;
            } else {
                return resourceBuilder_.getMessage();
            }
        }

        /**
         * <pre>
         * Required. The resource for which configuration should be returned.
         * </pre>
         *
         * <code>.opentelemetry.proto.resource.v1.Resource resource = 1;</code>
         */
        public Builder setResource(io.opentelemetry.proto.resource.v1.Resource value) {
            if (resourceBuilder_ == null) {
                if (value == null) {
                    throw new NullPointerException();
                }
                resource_ = value;
                onChanged();
            } else {
                resourceBuilder_.setMessage(value);
            }

            return this;
        }

        /**
         * <pre>
         * Required. The resource for which configuration should be returned.
         * </pre>
         *
         * <code>.opentelemetry.proto.resource.v1.Resource resource = 1;</code>
         */
        public Builder setResource(
                io.opentelemetry.proto.resource.v1.Resource.Builder builderForValue) {
            if (resourceBuilder_ == null) {
                resource_ = builderForValue.build();
                onChanged();
            } else {
                resourceBuilder_.setMessage(builderForValue.build());
            }

            return this;
        }

        /**
         * <pre>
         * Required. The resource for which configuration should be returned.
         * </pre>
         *
         * <code>.opentelemetry.proto.resource.v1.Resource resource = 1;</code>
         */
        public Builder mergeResource(io.opentelemetry.proto.resource.v1.Resource value) {
            if (resourceBuilder_ == null) {
                if (resource_ != null) {
                    resource_ =
                            io.opentelemetry.proto.resource.v1.Resource.newBuilder(resource_).mergeFrom(value).buildPartial();
                } else {
                    resource_ = value;
                }
                onChanged();
            } else {
                resourceBuilder_.mergeFrom(value);
            }

            return this;
        }

        /**
         * <pre>
         * Required. The resource for which configuration should be returned.
         * </pre>
         *
         * <code>.opentelemetry.proto.resource.v1.Resource resource = 1;</code>
         */
        public Builder clearResource() {
            if (resourceBuilder_ == null) {
                resource_ = null;
                onChanged();
            } else {
                resource_ = null;
                resourceBuilder_ = null;
            }

            return this;
        }

        /**
         * <pre>
         * Required. The resource for which configuration should be returned.
         * </pre>
         *
         * <code>.opentelemetry.proto.resource.v1.Resource resource = 1;</code>
         */
        public io.opentelemetry.proto.resource.v1.Resource.Builder getResourceBuilder() {

            onChanged();
            return getResourceFieldBuilder().getBuilder();
        }

        /**
         * <pre>
         * Required. The resource for which configuration should be returned.
         * </pre>
         *
         * <code>.opentelemetry.proto.resource.v1.Resource resource = 1;</code>
         */
        public io.opentelemetry.proto.resource.v1.ResourceOrBuilder getResourceOrBuilder() {
            if (resourceBuilder_ != null) {
                return resourceBuilder_.getMessageOrBuilder();
            } else {
                return resource_ == null ?
                        io.opentelemetry.proto.resource.v1.Resource.getDefaultInstance() : resource_;
            }
        }

        /**
         * <pre>
         * Required. The resource for which configuration should be returned.
         * </pre>
         *
         * <code>.opentelemetry.proto.resource.v1.Resource resource = 1;</code>
         */
        private com.google.protobuf.SingleFieldBuilderV3<
                io.opentelemetry.proto.resource.v1.Resource, io.opentelemetry.proto.resource.v1.Resource.Builder, io.opentelemetry.proto.resource.v1.ResourceOrBuilder>
        getResourceFieldBuilder() {
            if (resourceBuilder_ == null) {
                resourceBuilder_ = new com.google.protobuf.SingleFieldBuilderV3<
                        io.opentelemetry.proto.resource.v1.Resource, io.opentelemetry.proto.resource.v1.Resource.Builder, io.opentelemetry.proto.resource.v1.ResourceOrBuilder>(
                        getResource(),
                        getParentForChildren(),
                        isClean());
                resource_ = null;
            }
            return resourceBuilder_;
        }

        private com.google.protobuf.ByteString lastKnownFingerprint_ = com.google.protobuf.ByteString.EMPTY;

        /**
         * <pre>
         * Optional. The value of MetricConfigResponse.fingerprint for the last
         * configuration that the caller received and successfully applied.
         * </pre>
         *
         * <code>bytes last_known_fingerprint = 2;</code>
         *
         * @return The lastKnownFingerprint.
         */
        @Override
        public com.google.protobuf.ByteString getLastKnownFingerprint() {
            return lastKnownFingerprint_;
        }

        /**
         * <pre>
         * Optional. The value of MetricConfigResponse.fingerprint for the last
         * configuration that the caller received and successfully applied.
         * </pre>
         *
         * <code>bytes last_known_fingerprint = 2;</code>
         *
         * @param value The lastKnownFingerprint to set.
         * @return This builder for chaining.
         */
        public Builder setLastKnownFingerprint(com.google.protobuf.ByteString value) {
            if (value == null) {
                throw new NullPointerException();
            }

            lastKnownFingerprint_ = value;
            onChanged();
            return this;
        }

        /**
         * <pre>
         * Optional. The value of MetricConfigResponse.fingerprint for the last
         * configuration that the caller received and successfully applied.
         * </pre>
         *
         * <code>bytes last_known_fingerprint = 2;</code>
         *
         * @return This builder for chaining.
         */
        public Builder clearLastKnownFingerprint() {

            lastKnownFingerprint_ = getDefaultInstance().getLastKnownFingerprint();
            onChanged();
            return this;
        }

        @Override
        public final Builder setUnknownFields(
                final com.google.protobuf.UnknownFieldSet unknownFields) {
            return super.setUnknownFields(unknownFields);
        }

        @Override
        public final Builder mergeUnknownFields(
                final com.google.protobuf.UnknownFieldSet unknownFields) {
            return super.mergeUnknownFields(unknownFields);
        }


        // @@protoc_insertion_point(builder_scope:opentelemetry.proto.metrics.experimental.MetricConfigRequest)
    }

    // @@protoc_insertion_point(class_scope:opentelemetry.proto.metrics.experimental.MetricConfigRequest)
    private static final MetricConfigRequest DEFAULT_INSTANCE;

    static {
        DEFAULT_INSTANCE = new MetricConfigRequest();
    }

    public static MetricConfigRequest getDefaultInstance() {
        return DEFAULT_INSTANCE;
    }

    private static final com.google.protobuf.Parser<MetricConfigRequest>
            PARSER = new com.google.protobuf.AbstractParser<MetricConfigRequest>() {
        @Override
        public MetricConfigRequest parsePartialFrom(
                com.google.protobuf.CodedInputStream input,
                com.google.protobuf.ExtensionRegistryLite extensionRegistry)
                throws com.google.protobuf.InvalidProtocolBufferException {
            return new MetricConfigRequest(input, extensionRegistry);
        }
    };

    public static com.google.protobuf.Parser<MetricConfigRequest> parser() {
        return PARSER;
    }

    @Override
    public com.google.protobuf.Parser<MetricConfigRequest> getParserForType() {
        return PARSER;
    }

    @Override
    public MetricConfigRequest getDefaultInstanceForType() {
        return DEFAULT_INSTANCE;
    }

}

