// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: opentelemetry/proto/metrics/v1/metrics.proto

package io.opentelemetry.proto.metrics.v1;

/**
 * <pre>
 * IntDataPoint is deprecated. Use integer value in NumberDataPoint.
 * </pre>
 * <p>
 * Protobuf type {@code opentelemetry.proto.metrics.v1.IntDataPoint}
 */
@Deprecated
public final class IntDataPoint extends
        com.google.protobuf.GeneratedMessageV3 implements
        // @@protoc_insertion_point(message_implements:opentelemetry.proto.metrics.v1.IntDataPoint)
        IntDataPointOrBuilder {
    private static final long serialVersionUID = 0L;

    // Use IntDataPoint.newBuilder() to construct.
    private IntDataPoint(com.google.protobuf.GeneratedMessageV3.Builder<?> builder) {
        super(builder);
    }

    private IntDataPoint() {
        labels_ = java.util.Collections.emptyList();
        exemplars_ = java.util.Collections.emptyList();
    }

    @Override
    @SuppressWarnings({"unused"})
    protected Object newInstance(
            UnusedPrivateParameter unused) {
        return new IntDataPoint();
    }

    @Override
    public final com.google.protobuf.UnknownFieldSet
    getUnknownFields() {
        return this.unknownFields;
    }

    private IntDataPoint(
            com.google.protobuf.CodedInputStream input,
            com.google.protobuf.ExtensionRegistryLite extensionRegistry)
            throws com.google.protobuf.InvalidProtocolBufferException {
        this();
        if (extensionRegistry == null) {
            throw new NullPointerException();
        }
        int mutable_bitField0_ = 0;
        com.google.protobuf.UnknownFieldSet.Builder unknownFields =
                com.google.protobuf.UnknownFieldSet.newBuilder();
        try {
            boolean done = false;
            while (!done) {
                int tag = input.readTag();
                switch (tag) {
                    case 0:
                        done = true;
                        break;
                    case 10: {
                        if (!((mutable_bitField0_ & 0x00000001) != 0)) {
                            labels_ = new java.util.ArrayList<io.opentelemetry.proto.common.v1.StringKeyValue>();
                            mutable_bitField0_ |= 0x00000001;
                        }
                        labels_.add(
                                input.readMessage(io.opentelemetry.proto.common.v1.StringKeyValue.parser(), extensionRegistry));
                        break;
                    }
                    case 17: {

                        startTimeUnixNano_ = input.readFixed64();
                        break;
                    }
                    case 25: {

                        timeUnixNano_ = input.readFixed64();
                        break;
                    }
                    case 33: {

                        value_ = input.readSFixed64();
                        break;
                    }
                    case 42: {
                        if (!((mutable_bitField0_ & 0x00000002) != 0)) {
                            exemplars_ = new java.util.ArrayList<IntExemplar>();
                            mutable_bitField0_ |= 0x00000002;
                        }
                        exemplars_.add(
                                input.readMessage(IntExemplar.parser(), extensionRegistry));
                        break;
                    }
                    default: {
                        if (!parseUnknownField(
                                input, unknownFields, extensionRegistry, tag)) {
                            done = true;
                        }
                        break;
                    }
                }
            }
        } catch (com.google.protobuf.InvalidProtocolBufferException e) {
            throw e.setUnfinishedMessage(this);
        } catch (java.io.IOException e) {
            throw new com.google.protobuf.InvalidProtocolBufferException(
                    e).setUnfinishedMessage(this);
        } finally {
            if (((mutable_bitField0_ & 0x00000001) != 0)) {
                labels_ = java.util.Collections.unmodifiableList(labels_);
            }
            if (((mutable_bitField0_ & 0x00000002) != 0)) {
                exemplars_ = java.util.Collections.unmodifiableList(exemplars_);
            }
            this.unknownFields = unknownFields.build();
            makeExtensionsImmutable();
        }
    }

    public static final com.google.protobuf.Descriptors.Descriptor
    getDescriptor() {
        return MetricsProto.internal_static_opentelemetry_proto_metrics_v1_IntDataPoint_descriptor;
    }

    @Override
    protected FieldAccessorTable
    internalGetFieldAccessorTable() {
        return MetricsProto.internal_static_opentelemetry_proto_metrics_v1_IntDataPoint_fieldAccessorTable
                .ensureFieldAccessorsInitialized(
                        IntDataPoint.class, Builder.class);
    }

    public static final int LABELS_FIELD_NUMBER = 1;
    private java.util.List<io.opentelemetry.proto.common.v1.StringKeyValue> labels_;

    /**
     * <pre>
     * The set of labels that uniquely identify this timeseries.
     * </pre>
     *
     * <code>repeated .opentelemetry.proto.common.v1.StringKeyValue labels = 1;</code>
     */
    @Override
    public java.util.List<io.opentelemetry.proto.common.v1.StringKeyValue> getLabelsList() {
        return labels_;
    }

    /**
     * <pre>
     * The set of labels that uniquely identify this timeseries.
     * </pre>
     *
     * <code>repeated .opentelemetry.proto.common.v1.StringKeyValue labels = 1;</code>
     */
    @Override
    public java.util.List<? extends io.opentelemetry.proto.common.v1.StringKeyValueOrBuilder>
    getLabelsOrBuilderList() {
        return labels_;
    }

    /**
     * <pre>
     * The set of labels that uniquely identify this timeseries.
     * </pre>
     *
     * <code>repeated .opentelemetry.proto.common.v1.StringKeyValue labels = 1;</code>
     */
    @Override
    public int getLabelsCount() {
        return labels_.size();
    }

    /**
     * <pre>
     * The set of labels that uniquely identify this timeseries.
     * </pre>
     *
     * <code>repeated .opentelemetry.proto.common.v1.StringKeyValue labels = 1;</code>
     */
    @Override
    public io.opentelemetry.proto.common.v1.StringKeyValue getLabels(int index) {
        return labels_.get(index);
    }

    /**
     * <pre>
     * The set of labels that uniquely identify this timeseries.
     * </pre>
     *
     * <code>repeated .opentelemetry.proto.common.v1.StringKeyValue labels = 1;</code>
     */
    @Override
    public io.opentelemetry.proto.common.v1.StringKeyValueOrBuilder getLabelsOrBuilder(
            int index) {
        return labels_.get(index);
    }

    public static final int START_TIME_UNIX_NANO_FIELD_NUMBER = 2;
    private long startTimeUnixNano_;

    /**
     * <pre>
     * StartTimeUnixNano is optional but strongly encouraged, see the
     * the detiled comments above Metric.
     * Value is UNIX Epoch time in nanoseconds since 00:00:00 UTC on 1 January
     * 1970.
     * </pre>
     *
     * <code>fixed64 start_time_unix_nano = 2;</code>
     *
     * @return The startTimeUnixNano.
     */
    @Override
    public long getStartTimeUnixNano() {
        return startTimeUnixNano_;
    }

    public static final int TIME_UNIX_NANO_FIELD_NUMBER = 3;
    private long timeUnixNano_;

    /**
     * <pre>
     * TimeUnixNano is required, see the detailed comments above Metric.
     * Value is UNIX Epoch time in nanoseconds since 00:00:00 UTC on 1 January
     * 1970.
     * </pre>
     *
     * <code>fixed64 time_unix_nano = 3;</code>
     *
     * @return The timeUnixNano.
     */
    @Override
    public long getTimeUnixNano() {
        return timeUnixNano_;
    }

    public static final int VALUE_FIELD_NUMBER = 4;
    private long value_;

    /**
     * <pre>
     * value itself.
     * </pre>
     *
     * <code>sfixed64 value = 4;</code>
     *
     * @return The value.
     */
    @Override
    public long getValue() {
        return value_;
    }

    public static final int EXEMPLARS_FIELD_NUMBER = 5;
    private java.util.List<IntExemplar> exemplars_;

    /**
     * <pre>
     * (Optional) List of exemplars collected from
     * measurements that were used to form the data point
     * </pre>
     *
     * <code>repeated .opentelemetry.proto.metrics.v1.IntExemplar exemplars = 5;</code>
     */
    @Override
    public java.util.List<IntExemplar> getExemplarsList() {
        return exemplars_;
    }

    /**
     * <pre>
     * (Optional) List of exemplars collected from
     * measurements that were used to form the data point
     * </pre>
     *
     * <code>repeated .opentelemetry.proto.metrics.v1.IntExemplar exemplars = 5;</code>
     */
    @Override
    public java.util.List<? extends IntExemplarOrBuilder>
    getExemplarsOrBuilderList() {
        return exemplars_;
    }

    /**
     * <pre>
     * (Optional) List of exemplars collected from
     * measurements that were used to form the data point
     * </pre>
     *
     * <code>repeated .opentelemetry.proto.metrics.v1.IntExemplar exemplars = 5;</code>
     */
    @Override
    public int getExemplarsCount() {
        return exemplars_.size();
    }

    /**
     * <pre>
     * (Optional) List of exemplars collected from
     * measurements that were used to form the data point
     * </pre>
     *
     * <code>repeated .opentelemetry.proto.metrics.v1.IntExemplar exemplars = 5;</code>
     */
    @Override
    public IntExemplar getExemplars(int index) {
        return exemplars_.get(index);
    }

    /**
     * <pre>
     * (Optional) List of exemplars collected from
     * measurements that were used to form the data point
     * </pre>
     *
     * <code>repeated .opentelemetry.proto.metrics.v1.IntExemplar exemplars = 5;</code>
     */
    @Override
    public IntExemplarOrBuilder getExemplarsOrBuilder(
            int index) {
        return exemplars_.get(index);
    }

    private byte memoizedIsInitialized = -1;

    @Override
    public final boolean isInitialized() {
        byte isInitialized = memoizedIsInitialized;
        if (isInitialized == 1) return true;
        if (isInitialized == 0) return false;

        memoizedIsInitialized = 1;
        return true;
    }

    @Override
    public void writeTo(com.google.protobuf.CodedOutputStream output)
            throws java.io.IOException {
        for (int i = 0; i < labels_.size(); i++) {
            output.writeMessage(1, labels_.get(i));
        }
        if (startTimeUnixNano_ != 0L) {
            output.writeFixed64(2, startTimeUnixNano_);
        }
        if (timeUnixNano_ != 0L) {
            output.writeFixed64(3, timeUnixNano_);
        }
        if (value_ != 0L) {
            output.writeSFixed64(4, value_);
        }
        for (int i = 0; i < exemplars_.size(); i++) {
            output.writeMessage(5, exemplars_.get(i));
        }
        unknownFields.writeTo(output);
    }

    @Override
    public int getSerializedSize() {
        int size = memoizedSize;
        if (size != -1) return size;

        size = 0;
        for (int i = 0; i < labels_.size(); i++) {
            size += com.google.protobuf.CodedOutputStream
                    .computeMessageSize(1, labels_.get(i));
        }
        if (startTimeUnixNano_ != 0L) {
            size += com.google.protobuf.CodedOutputStream
                    .computeFixed64Size(2, startTimeUnixNano_);
        }
        if (timeUnixNano_ != 0L) {
            size += com.google.protobuf.CodedOutputStream
                    .computeFixed64Size(3, timeUnixNano_);
        }
        if (value_ != 0L) {
            size += com.google.protobuf.CodedOutputStream
                    .computeSFixed64Size(4, value_);
        }
        for (int i = 0; i < exemplars_.size(); i++) {
            size += com.google.protobuf.CodedOutputStream
                    .computeMessageSize(5, exemplars_.get(i));
        }
        size += unknownFields.getSerializedSize();
        memoizedSize = size;
        return size;
    }

    @Override
    public boolean equals(final Object obj) {
        if (obj == this) {
            return true;
        }
        if (!(obj instanceof IntDataPoint)) {
            return super.equals(obj);
        }
        IntDataPoint other = (IntDataPoint) obj;

        if (!getLabelsList()
                .equals(other.getLabelsList())) return false;
        if (getStartTimeUnixNano()
                != other.getStartTimeUnixNano()) return false;
        if (getTimeUnixNano()
                != other.getTimeUnixNano()) return false;
        if (getValue()
                != other.getValue()) return false;
        if (!getExemplarsList()
                .equals(other.getExemplarsList())) return false;
        if (!unknownFields.equals(other.unknownFields)) return false;
        return true;
    }

    @Override
    public int hashCode() {
        if (memoizedHashCode != 0) {
            return memoizedHashCode;
        }
        int hash = 41;
        hash = (19 * hash) + getDescriptor().hashCode();
        if (getLabelsCount() > 0) {
            hash = (37 * hash) + LABELS_FIELD_NUMBER;
            hash = (53 * hash) + getLabelsList().hashCode();
        }
        hash = (37 * hash) + START_TIME_UNIX_NANO_FIELD_NUMBER;
        hash = (53 * hash) + com.google.protobuf.Internal.hashLong(
                getStartTimeUnixNano());
        hash = (37 * hash) + TIME_UNIX_NANO_FIELD_NUMBER;
        hash = (53 * hash) + com.google.protobuf.Internal.hashLong(
                getTimeUnixNano());
        hash = (37 * hash) + VALUE_FIELD_NUMBER;
        hash = (53 * hash) + com.google.protobuf.Internal.hashLong(
                getValue());
        if (getExemplarsCount() > 0) {
            hash = (37 * hash) + EXEMPLARS_FIELD_NUMBER;
            hash = (53 * hash) + getExemplarsList().hashCode();
        }
        hash = (29 * hash) + unknownFields.hashCode();
        memoizedHashCode = hash;
        return hash;
    }

    public static IntDataPoint parseFrom(
            java.nio.ByteBuffer data)
            throws com.google.protobuf.InvalidProtocolBufferException {
        return PARSER.parseFrom(data);
    }

    public static IntDataPoint parseFrom(
            java.nio.ByteBuffer data,
            com.google.protobuf.ExtensionRegistryLite extensionRegistry)
            throws com.google.protobuf.InvalidProtocolBufferException {
        return PARSER.parseFrom(data, extensionRegistry);
    }

    public static IntDataPoint parseFrom(
            com.google.protobuf.ByteString data)
            throws com.google.protobuf.InvalidProtocolBufferException {
        return PARSER.parseFrom(data);
    }

    public static IntDataPoint parseFrom(
            com.google.protobuf.ByteString data,
            com.google.protobuf.ExtensionRegistryLite extensionRegistry)
            throws com.google.protobuf.InvalidProtocolBufferException {
        return PARSER.parseFrom(data, extensionRegistry);
    }

    public static IntDataPoint parseFrom(byte[] data)
            throws com.google.protobuf.InvalidProtocolBufferException {
        return PARSER.parseFrom(data);
    }

    public static IntDataPoint parseFrom(
            byte[] data,
            com.google.protobuf.ExtensionRegistryLite extensionRegistry)
            throws com.google.protobuf.InvalidProtocolBufferException {
        return PARSER.parseFrom(data, extensionRegistry);
    }

    public static IntDataPoint parseFrom(java.io.InputStream input)
            throws java.io.IOException {
        return com.google.protobuf.GeneratedMessageV3
                .parseWithIOException(PARSER, input);
    }

    public static IntDataPoint parseFrom(
            java.io.InputStream input,
            com.google.protobuf.ExtensionRegistryLite extensionRegistry)
            throws java.io.IOException {
        return com.google.protobuf.GeneratedMessageV3
                .parseWithIOException(PARSER, input, extensionRegistry);
    }

    public static IntDataPoint parseDelimitedFrom(java.io.InputStream input)
            throws java.io.IOException {
        return com.google.protobuf.GeneratedMessageV3
                .parseDelimitedWithIOException(PARSER, input);
    }

    public static IntDataPoint parseDelimitedFrom(
            java.io.InputStream input,
            com.google.protobuf.ExtensionRegistryLite extensionRegistry)
            throws java.io.IOException {
        return com.google.protobuf.GeneratedMessageV3
                .parseDelimitedWithIOException(PARSER, input, extensionRegistry);
    }

    public static IntDataPoint parseFrom(
            com.google.protobuf.CodedInputStream input)
            throws java.io.IOException {
        return com.google.protobuf.GeneratedMessageV3
                .parseWithIOException(PARSER, input);
    }

    public static IntDataPoint parseFrom(
            com.google.protobuf.CodedInputStream input,
            com.google.protobuf.ExtensionRegistryLite extensionRegistry)
            throws java.io.IOException {
        return com.google.protobuf.GeneratedMessageV3
                .parseWithIOException(PARSER, input, extensionRegistry);
    }

    @Override
    public Builder newBuilderForType() {
        return newBuilder();
    }

    public static Builder newBuilder() {
        return DEFAULT_INSTANCE.toBuilder();
    }

    public static Builder newBuilder(IntDataPoint prototype) {
        return DEFAULT_INSTANCE.toBuilder().mergeFrom(prototype);
    }

    @Override
    public Builder toBuilder() {
        return this == DEFAULT_INSTANCE
                ? new Builder() : new Builder().mergeFrom(this);
    }

    @Override
    protected Builder newBuilderForType(
            BuilderParent parent) {
        Builder builder = new Builder(parent);
        return builder;
    }

    /**
     * <pre>
     * IntDataPoint is deprecated. Use integer value in NumberDataPoint.
     * </pre>
     * <p>
     * Protobuf type {@code opentelemetry.proto.metrics.v1.IntDataPoint}
     */
    public static final class Builder extends
            com.google.protobuf.GeneratedMessageV3.Builder<Builder> implements
            // @@protoc_insertion_point(builder_implements:opentelemetry.proto.metrics.v1.IntDataPoint)
            IntDataPointOrBuilder {
        public static final com.google.protobuf.Descriptors.Descriptor
        getDescriptor() {
            return MetricsProto.internal_static_opentelemetry_proto_metrics_v1_IntDataPoint_descriptor;
        }

        @Override
        protected FieldAccessorTable
        internalGetFieldAccessorTable() {
            return MetricsProto.internal_static_opentelemetry_proto_metrics_v1_IntDataPoint_fieldAccessorTable
                    .ensureFieldAccessorsInitialized(
                            IntDataPoint.class, Builder.class);
        }

        // Construct using io.opentelemetry.proto.metrics.v1.IntDataPoint.newBuilder()
        private Builder() {
            maybeForceBuilderInitialization();
        }

        private Builder(
                BuilderParent parent) {
            super(parent);
            maybeForceBuilderInitialization();
        }

        private void maybeForceBuilderInitialization() {
            if (com.google.protobuf.GeneratedMessageV3
                    .alwaysUseFieldBuilders) {
                getLabelsFieldBuilder();
                getExemplarsFieldBuilder();
            }
        }

        @Override
        public Builder clear() {
            super.clear();
            if (labelsBuilder_ == null) {
                labels_ = java.util.Collections.emptyList();
                bitField0_ = (bitField0_ & ~0x00000001);
            } else {
                labelsBuilder_.clear();
            }
            startTimeUnixNano_ = 0L;

            timeUnixNano_ = 0L;

            value_ = 0L;

            if (exemplarsBuilder_ == null) {
                exemplars_ = java.util.Collections.emptyList();
                bitField0_ = (bitField0_ & ~0x00000002);
            } else {
                exemplarsBuilder_.clear();
            }
            return this;
        }

        @Override
        public com.google.protobuf.Descriptors.Descriptor
        getDescriptorForType() {
            return MetricsProto.internal_static_opentelemetry_proto_metrics_v1_IntDataPoint_descriptor;
        }

        @Override
        public IntDataPoint getDefaultInstanceForType() {
            return IntDataPoint.getDefaultInstance();
        }

        @Override
        public IntDataPoint build() {
            IntDataPoint result = buildPartial();
            if (!result.isInitialized()) {
                throw newUninitializedMessageException(result);
            }
            return result;
        }

        @Override
        public IntDataPoint buildPartial() {
            IntDataPoint result = new IntDataPoint(this);
            int from_bitField0_ = bitField0_;
            if (labelsBuilder_ == null) {
                if (((bitField0_ & 0x00000001) != 0)) {
                    labels_ = java.util.Collections.unmodifiableList(labels_);
                    bitField0_ = (bitField0_ & ~0x00000001);
                }
                result.labels_ = labels_;
            } else {
                result.labels_ = labelsBuilder_.build();
            }
            result.startTimeUnixNano_ = startTimeUnixNano_;
            result.timeUnixNano_ = timeUnixNano_;
            result.value_ = value_;
            if (exemplarsBuilder_ == null) {
                if (((bitField0_ & 0x00000002) != 0)) {
                    exemplars_ = java.util.Collections.unmodifiableList(exemplars_);
                    bitField0_ = (bitField0_ & ~0x00000002);
                }
                result.exemplars_ = exemplars_;
            } else {
                result.exemplars_ = exemplarsBuilder_.build();
            }
            onBuilt();
            return result;
        }

        @Override
        public Builder clone() {
            return super.clone();
        }

        @Override
        public Builder setField(
                com.google.protobuf.Descriptors.FieldDescriptor field,
                Object value) {
            return super.setField(field, value);
        }

        @Override
        public Builder clearField(
                com.google.protobuf.Descriptors.FieldDescriptor field) {
            return super.clearField(field);
        }

        @Override
        public Builder clearOneof(
                com.google.protobuf.Descriptors.OneofDescriptor oneof) {
            return super.clearOneof(oneof);
        }

        @Override
        public Builder setRepeatedField(
                com.google.protobuf.Descriptors.FieldDescriptor field,
                int index, Object value) {
            return super.setRepeatedField(field, index, value);
        }

        @Override
        public Builder addRepeatedField(
                com.google.protobuf.Descriptors.FieldDescriptor field,
                Object value) {
            return super.addRepeatedField(field, value);
        }

        @Override
        public Builder mergeFrom(com.google.protobuf.Message other) {
            if (other instanceof IntDataPoint) {
                return mergeFrom((IntDataPoint) other);
            } else {
                super.mergeFrom(other);
                return this;
            }
        }

        public Builder mergeFrom(IntDataPoint other) {
            if (other == IntDataPoint.getDefaultInstance()) return this;
            if (labelsBuilder_ == null) {
                if (!other.labels_.isEmpty()) {
                    if (labels_.isEmpty()) {
                        labels_ = other.labels_;
                        bitField0_ = (bitField0_ & ~0x00000001);
                    } else {
                        ensureLabelsIsMutable();
                        labels_.addAll(other.labels_);
                    }
                    onChanged();
                }
            } else {
                if (!other.labels_.isEmpty()) {
                    if (labelsBuilder_.isEmpty()) {
                        labelsBuilder_.dispose();
                        labelsBuilder_ = null;
                        labels_ = other.labels_;
                        bitField0_ = (bitField0_ & ~0x00000001);
                        labelsBuilder_ =
                                com.google.protobuf.GeneratedMessageV3.alwaysUseFieldBuilders ?
                                        getLabelsFieldBuilder() : null;
                    } else {
                        labelsBuilder_.addAllMessages(other.labels_);
                    }
                }
            }
            if (other.getStartTimeUnixNano() != 0L) {
                setStartTimeUnixNano(other.getStartTimeUnixNano());
            }
            if (other.getTimeUnixNano() != 0L) {
                setTimeUnixNano(other.getTimeUnixNano());
            }
            if (other.getValue() != 0L) {
                setValue(other.getValue());
            }
            if (exemplarsBuilder_ == null) {
                if (!other.exemplars_.isEmpty()) {
                    if (exemplars_.isEmpty()) {
                        exemplars_ = other.exemplars_;
                        bitField0_ = (bitField0_ & ~0x00000002);
                    } else {
                        ensureExemplarsIsMutable();
                        exemplars_.addAll(other.exemplars_);
                    }
                    onChanged();
                }
            } else {
                if (!other.exemplars_.isEmpty()) {
                    if (exemplarsBuilder_.isEmpty()) {
                        exemplarsBuilder_.dispose();
                        exemplarsBuilder_ = null;
                        exemplars_ = other.exemplars_;
                        bitField0_ = (bitField0_ & ~0x00000002);
                        exemplarsBuilder_ =
                                com.google.protobuf.GeneratedMessageV3.alwaysUseFieldBuilders ?
                                        getExemplarsFieldBuilder() : null;
                    } else {
                        exemplarsBuilder_.addAllMessages(other.exemplars_);
                    }
                }
            }
            this.mergeUnknownFields(other.unknownFields);
            onChanged();
            return this;
        }

        @Override
        public final boolean isInitialized() {
            return true;
        }

        @Override
        public Builder mergeFrom(
                com.google.protobuf.CodedInputStream input,
                com.google.protobuf.ExtensionRegistryLite extensionRegistry)
                throws java.io.IOException {
            IntDataPoint parsedMessage = null;
            try {
                parsedMessage = PARSER.parsePartialFrom(input, extensionRegistry);
            } catch (com.google.protobuf.InvalidProtocolBufferException e) {
                parsedMessage = (IntDataPoint) e.getUnfinishedMessage();
                throw e.unwrapIOException();
            } finally {
                if (parsedMessage != null) {
                    mergeFrom(parsedMessage);
                }
            }
            return this;
        }

        private int bitField0_;

        private java.util.List<io.opentelemetry.proto.common.v1.StringKeyValue> labels_ =
                java.util.Collections.emptyList();

        private void ensureLabelsIsMutable() {
            if (!((bitField0_ & 0x00000001) != 0)) {
                labels_ = new java.util.ArrayList<io.opentelemetry.proto.common.v1.StringKeyValue>(labels_);
                bitField0_ |= 0x00000001;
            }
        }

        private com.google.protobuf.RepeatedFieldBuilderV3<
                io.opentelemetry.proto.common.v1.StringKeyValue, io.opentelemetry.proto.common.v1.StringKeyValue.Builder, io.opentelemetry.proto.common.v1.StringKeyValueOrBuilder> labelsBuilder_;

        /**
         * <pre>
         * The set of labels that uniquely identify this timeseries.
         * </pre>
         *
         * <code>repeated .opentelemetry.proto.common.v1.StringKeyValue labels = 1;</code>
         */
        public java.util.List<io.opentelemetry.proto.common.v1.StringKeyValue> getLabelsList() {
            if (labelsBuilder_ == null) {
                return java.util.Collections.unmodifiableList(labels_);
            } else {
                return labelsBuilder_.getMessageList();
            }
        }

        /**
         * <pre>
         * The set of labels that uniquely identify this timeseries.
         * </pre>
         *
         * <code>repeated .opentelemetry.proto.common.v1.StringKeyValue labels = 1;</code>
         */
        public int getLabelsCount() {
            if (labelsBuilder_ == null) {
                return labels_.size();
            } else {
                return labelsBuilder_.getCount();
            }
        }

        /**
         * <pre>
         * The set of labels that uniquely identify this timeseries.
         * </pre>
         *
         * <code>repeated .opentelemetry.proto.common.v1.StringKeyValue labels = 1;</code>
         */
        public io.opentelemetry.proto.common.v1.StringKeyValue getLabels(int index) {
            if (labelsBuilder_ == null) {
                return labels_.get(index);
            } else {
                return labelsBuilder_.getMessage(index);
            }
        }

        /**
         * <pre>
         * The set of labels that uniquely identify this timeseries.
         * </pre>
         *
         * <code>repeated .opentelemetry.proto.common.v1.StringKeyValue labels = 1;</code>
         */
        public Builder setLabels(
                int index, io.opentelemetry.proto.common.v1.StringKeyValue value) {
            if (labelsBuilder_ == null) {
                if (value == null) {
                    throw new NullPointerException();
                }
                ensureLabelsIsMutable();
                labels_.set(index, value);
                onChanged();
            } else {
                labelsBuilder_.setMessage(index, value);
            }
            return this;
        }

        /**
         * <pre>
         * The set of labels that uniquely identify this timeseries.
         * </pre>
         *
         * <code>repeated .opentelemetry.proto.common.v1.StringKeyValue labels = 1;</code>
         */
        public Builder setLabels(
                int index, io.opentelemetry.proto.common.v1.StringKeyValue.Builder builderForValue) {
            if (labelsBuilder_ == null) {
                ensureLabelsIsMutable();
                labels_.set(index, builderForValue.build());
                onChanged();
            } else {
                labelsBuilder_.setMessage(index, builderForValue.build());
            }
            return this;
        }

        /**
         * <pre>
         * The set of labels that uniquely identify this timeseries.
         * </pre>
         *
         * <code>repeated .opentelemetry.proto.common.v1.StringKeyValue labels = 1;</code>
         */
        public Builder addLabels(io.opentelemetry.proto.common.v1.StringKeyValue value) {
            if (labelsBuilder_ == null) {
                if (value == null) {
                    throw new NullPointerException();
                }
                ensureLabelsIsMutable();
                labels_.add(value);
                onChanged();
            } else {
                labelsBuilder_.addMessage(value);
            }
            return this;
        }

        /**
         * <pre>
         * The set of labels that uniquely identify this timeseries.
         * </pre>
         *
         * <code>repeated .opentelemetry.proto.common.v1.StringKeyValue labels = 1;</code>
         */
        public Builder addLabels(
                int index, io.opentelemetry.proto.common.v1.StringKeyValue value) {
            if (labelsBuilder_ == null) {
                if (value == null) {
                    throw new NullPointerException();
                }
                ensureLabelsIsMutable();
                labels_.add(index, value);
                onChanged();
            } else {
                labelsBuilder_.addMessage(index, value);
            }
            return this;
        }

        /**
         * <pre>
         * The set of labels that uniquely identify this timeseries.
         * </pre>
         *
         * <code>repeated .opentelemetry.proto.common.v1.StringKeyValue labels = 1;</code>
         */
        public Builder addLabels(
                io.opentelemetry.proto.common.v1.StringKeyValue.Builder builderForValue) {
            if (labelsBuilder_ == null) {
                ensureLabelsIsMutable();
                labels_.add(builderForValue.build());
                onChanged();
            } else {
                labelsBuilder_.addMessage(builderForValue.build());
            }
            return this;
        }

        /**
         * <pre>
         * The set of labels that uniquely identify this timeseries.
         * </pre>
         *
         * <code>repeated .opentelemetry.proto.common.v1.StringKeyValue labels = 1;</code>
         */
        public Builder addLabels(
                int index, io.opentelemetry.proto.common.v1.StringKeyValue.Builder builderForValue) {
            if (labelsBuilder_ == null) {
                ensureLabelsIsMutable();
                labels_.add(index, builderForValue.build());
                onChanged();
            } else {
                labelsBuilder_.addMessage(index, builderForValue.build());
            }
            return this;
        }

        /**
         * <pre>
         * The set of labels that uniquely identify this timeseries.
         * </pre>
         *
         * <code>repeated .opentelemetry.proto.common.v1.StringKeyValue labels = 1;</code>
         */
        public Builder addAllLabels(
                Iterable<? extends io.opentelemetry.proto.common.v1.StringKeyValue> values) {
            if (labelsBuilder_ == null) {
                ensureLabelsIsMutable();
                com.google.protobuf.AbstractMessageLite.Builder.addAll(
                        values, labels_);
                onChanged();
            } else {
                labelsBuilder_.addAllMessages(values);
            }
            return this;
        }

        /**
         * <pre>
         * The set of labels that uniquely identify this timeseries.
         * </pre>
         *
         * <code>repeated .opentelemetry.proto.common.v1.StringKeyValue labels = 1;</code>
         */
        public Builder clearLabels() {
            if (labelsBuilder_ == null) {
                labels_ = java.util.Collections.emptyList();
                bitField0_ = (bitField0_ & ~0x00000001);
                onChanged();
            } else {
                labelsBuilder_.clear();
            }
            return this;
        }

        /**
         * <pre>
         * The set of labels that uniquely identify this timeseries.
         * </pre>
         *
         * <code>repeated .opentelemetry.proto.common.v1.StringKeyValue labels = 1;</code>
         */
        public Builder removeLabels(int index) {
            if (labelsBuilder_ == null) {
                ensureLabelsIsMutable();
                labels_.remove(index);
                onChanged();
            } else {
                labelsBuilder_.remove(index);
            }
            return this;
        }

        /**
         * <pre>
         * The set of labels that uniquely identify this timeseries.
         * </pre>
         *
         * <code>repeated .opentelemetry.proto.common.v1.StringKeyValue labels = 1;</code>
         */
        public io.opentelemetry.proto.common.v1.StringKeyValue.Builder getLabelsBuilder(
                int index) {
            return getLabelsFieldBuilder().getBuilder(index);
        }

        /**
         * <pre>
         * The set of labels that uniquely identify this timeseries.
         * </pre>
         *
         * <code>repeated .opentelemetry.proto.common.v1.StringKeyValue labels = 1;</code>
         */
        public io.opentelemetry.proto.common.v1.StringKeyValueOrBuilder getLabelsOrBuilder(
                int index) {
            if (labelsBuilder_ == null) {
                return labels_.get(index);
            } else {
                return labelsBuilder_.getMessageOrBuilder(index);
            }
        }

        /**
         * <pre>
         * The set of labels that uniquely identify this timeseries.
         * </pre>
         *
         * <code>repeated .opentelemetry.proto.common.v1.StringKeyValue labels = 1;</code>
         */
        public java.util.List<? extends io.opentelemetry.proto.common.v1.StringKeyValueOrBuilder>
        getLabelsOrBuilderList() {
            if (labelsBuilder_ != null) {
                return labelsBuilder_.getMessageOrBuilderList();
            } else {
                return java.util.Collections.unmodifiableList(labels_);
            }
        }

        /**
         * <pre>
         * The set of labels that uniquely identify this timeseries.
         * </pre>
         *
         * <code>repeated .opentelemetry.proto.common.v1.StringKeyValue labels = 1;</code>
         */
        public io.opentelemetry.proto.common.v1.StringKeyValue.Builder addLabelsBuilder() {
            return getLabelsFieldBuilder().addBuilder(
                    io.opentelemetry.proto.common.v1.StringKeyValue.getDefaultInstance());
        }

        /**
         * <pre>
         * The set of labels that uniquely identify this timeseries.
         * </pre>
         *
         * <code>repeated .opentelemetry.proto.common.v1.StringKeyValue labels = 1;</code>
         */
        public io.opentelemetry.proto.common.v1.StringKeyValue.Builder addLabelsBuilder(
                int index) {
            return getLabelsFieldBuilder().addBuilder(
                    index, io.opentelemetry.proto.common.v1.StringKeyValue.getDefaultInstance());
        }

        /**
         * <pre>
         * The set of labels that uniquely identify this timeseries.
         * </pre>
         *
         * <code>repeated .opentelemetry.proto.common.v1.StringKeyValue labels = 1;</code>
         */
        public java.util.List<io.opentelemetry.proto.common.v1.StringKeyValue.Builder>
        getLabelsBuilderList() {
            return getLabelsFieldBuilder().getBuilderList();
        }

        private com.google.protobuf.RepeatedFieldBuilderV3<
                io.opentelemetry.proto.common.v1.StringKeyValue, io.opentelemetry.proto.common.v1.StringKeyValue.Builder, io.opentelemetry.proto.common.v1.StringKeyValueOrBuilder>
        getLabelsFieldBuilder() {
            if (labelsBuilder_ == null) {
                labelsBuilder_ = new com.google.protobuf.RepeatedFieldBuilderV3<
                        io.opentelemetry.proto.common.v1.StringKeyValue, io.opentelemetry.proto.common.v1.StringKeyValue.Builder, io.opentelemetry.proto.common.v1.StringKeyValueOrBuilder>(
                        labels_,
                        ((bitField0_ & 0x00000001) != 0),
                        getParentForChildren(),
                        isClean());
                labels_ = null;
            }
            return labelsBuilder_;
        }

        private long startTimeUnixNano_;

        /**
         * <pre>
         * StartTimeUnixNano is optional but strongly encouraged, see the
         * the detiled comments above Metric.
         * Value is UNIX Epoch time in nanoseconds since 00:00:00 UTC on 1 January
         * 1970.
         * </pre>
         *
         * <code>fixed64 start_time_unix_nano = 2;</code>
         *
         * @return The startTimeUnixNano.
         */
        @Override
        public long getStartTimeUnixNano() {
            return startTimeUnixNano_;
        }

        /**
         * <pre>
         * StartTimeUnixNano is optional but strongly encouraged, see the
         * the detiled comments above Metric.
         * Value is UNIX Epoch time in nanoseconds since 00:00:00 UTC on 1 January
         * 1970.
         * </pre>
         *
         * <code>fixed64 start_time_unix_nano = 2;</code>
         *
         * @param value The startTimeUnixNano to set.
         * @return This builder for chaining.
         */
        public Builder setStartTimeUnixNano(long value) {

            startTimeUnixNano_ = value;
            onChanged();
            return this;
        }

        /**
         * <pre>
         * StartTimeUnixNano is optional but strongly encouraged, see the
         * the detiled comments above Metric.
         * Value is UNIX Epoch time in nanoseconds since 00:00:00 UTC on 1 January
         * 1970.
         * </pre>
         *
         * <code>fixed64 start_time_unix_nano = 2;</code>
         *
         * @return This builder for chaining.
         */
        public Builder clearStartTimeUnixNano() {

            startTimeUnixNano_ = 0L;
            onChanged();
            return this;
        }

        private long timeUnixNano_;

        /**
         * <pre>
         * TimeUnixNano is required, see the detailed comments above Metric.
         * Value is UNIX Epoch time in nanoseconds since 00:00:00 UTC on 1 January
         * 1970.
         * </pre>
         *
         * <code>fixed64 time_unix_nano = 3;</code>
         *
         * @return The timeUnixNano.
         */
        @Override
        public long getTimeUnixNano() {
            return timeUnixNano_;
        }

        /**
         * <pre>
         * TimeUnixNano is required, see the detailed comments above Metric.
         * Value is UNIX Epoch time in nanoseconds since 00:00:00 UTC on 1 January
         * 1970.
         * </pre>
         *
         * <code>fixed64 time_unix_nano = 3;</code>
         *
         * @param value The timeUnixNano to set.
         * @return This builder for chaining.
         */
        public Builder setTimeUnixNano(long value) {

            timeUnixNano_ = value;
            onChanged();
            return this;
        }

        /**
         * <pre>
         * TimeUnixNano is required, see the detailed comments above Metric.
         * Value is UNIX Epoch time in nanoseconds since 00:00:00 UTC on 1 January
         * 1970.
         * </pre>
         *
         * <code>fixed64 time_unix_nano = 3;</code>
         *
         * @return This builder for chaining.
         */
        public Builder clearTimeUnixNano() {

            timeUnixNano_ = 0L;
            onChanged();
            return this;
        }

        private long value_;

        /**
         * <pre>
         * value itself.
         * </pre>
         *
         * <code>sfixed64 value = 4;</code>
         *
         * @return The value.
         */
        @Override
        public long getValue() {
            return value_;
        }

        /**
         * <pre>
         * value itself.
         * </pre>
         *
         * <code>sfixed64 value = 4;</code>
         *
         * @param value The value to set.
         * @return This builder for chaining.
         */
        public Builder setValue(long value) {

            value_ = value;
            onChanged();
            return this;
        }

        /**
         * <pre>
         * value itself.
         * </pre>
         *
         * <code>sfixed64 value = 4;</code>
         *
         * @return This builder for chaining.
         */
        public Builder clearValue() {

            value_ = 0L;
            onChanged();
            return this;
        }

        private java.util.List<IntExemplar> exemplars_ =
                java.util.Collections.emptyList();

        private void ensureExemplarsIsMutable() {
            if (!((bitField0_ & 0x00000002) != 0)) {
                exemplars_ = new java.util.ArrayList<IntExemplar>(exemplars_);
                bitField0_ |= 0x00000002;
            }
        }

        private com.google.protobuf.RepeatedFieldBuilderV3<
                IntExemplar, IntExemplar.Builder, IntExemplarOrBuilder> exemplarsBuilder_;

        /**
         * <pre>
         * (Optional) List of exemplars collected from
         * measurements that were used to form the data point
         * </pre>
         *
         * <code>repeated .opentelemetry.proto.metrics.v1.IntExemplar exemplars = 5;</code>
         */
        public java.util.List<IntExemplar> getExemplarsList() {
            if (exemplarsBuilder_ == null) {
                return java.util.Collections.unmodifiableList(exemplars_);
            } else {
                return exemplarsBuilder_.getMessageList();
            }
        }

        /**
         * <pre>
         * (Optional) List of exemplars collected from
         * measurements that were used to form the data point
         * </pre>
         *
         * <code>repeated .opentelemetry.proto.metrics.v1.IntExemplar exemplars = 5;</code>
         */
        public int getExemplarsCount() {
            if (exemplarsBuilder_ == null) {
                return exemplars_.size();
            } else {
                return exemplarsBuilder_.getCount();
            }
        }

        /**
         * <pre>
         * (Optional) List of exemplars collected from
         * measurements that were used to form the data point
         * </pre>
         *
         * <code>repeated .opentelemetry.proto.metrics.v1.IntExemplar exemplars = 5;</code>
         */
        public IntExemplar getExemplars(int index) {
            if (exemplarsBuilder_ == null) {
                return exemplars_.get(index);
            } else {
                return exemplarsBuilder_.getMessage(index);
            }
        }

        /**
         * <pre>
         * (Optional) List of exemplars collected from
         * measurements that were used to form the data point
         * </pre>
         *
         * <code>repeated .opentelemetry.proto.metrics.v1.IntExemplar exemplars = 5;</code>
         */
        public Builder setExemplars(
                int index, IntExemplar value) {
            if (exemplarsBuilder_ == null) {
                if (value == null) {
                    throw new NullPointerException();
                }
                ensureExemplarsIsMutable();
                exemplars_.set(index, value);
                onChanged();
            } else {
                exemplarsBuilder_.setMessage(index, value);
            }
            return this;
        }

        /**
         * <pre>
         * (Optional) List of exemplars collected from
         * measurements that were used to form the data point
         * </pre>
         *
         * <code>repeated .opentelemetry.proto.metrics.v1.IntExemplar exemplars = 5;</code>
         */
        public Builder setExemplars(
                int index, IntExemplar.Builder builderForValue) {
            if (exemplarsBuilder_ == null) {
                ensureExemplarsIsMutable();
                exemplars_.set(index, builderForValue.build());
                onChanged();
            } else {
                exemplarsBuilder_.setMessage(index, builderForValue.build());
            }
            return this;
        }

        /**
         * <pre>
         * (Optional) List of exemplars collected from
         * measurements that were used to form the data point
         * </pre>
         *
         * <code>repeated .opentelemetry.proto.metrics.v1.IntExemplar exemplars = 5;</code>
         */
        public Builder addExemplars(IntExemplar value) {
            if (exemplarsBuilder_ == null) {
                if (value == null) {
                    throw new NullPointerException();
                }
                ensureExemplarsIsMutable();
                exemplars_.add(value);
                onChanged();
            } else {
                exemplarsBuilder_.addMessage(value);
            }
            return this;
        }

        /**
         * <pre>
         * (Optional) List of exemplars collected from
         * measurements that were used to form the data point
         * </pre>
         *
         * <code>repeated .opentelemetry.proto.metrics.v1.IntExemplar exemplars = 5;</code>
         */
        public Builder addExemplars(
                int index, IntExemplar value) {
            if (exemplarsBuilder_ == null) {
                if (value == null) {
                    throw new NullPointerException();
                }
                ensureExemplarsIsMutable();
                exemplars_.add(index, value);
                onChanged();
            } else {
                exemplarsBuilder_.addMessage(index, value);
            }
            return this;
        }

        /**
         * <pre>
         * (Optional) List of exemplars collected from
         * measurements that were used to form the data point
         * </pre>
         *
         * <code>repeated .opentelemetry.proto.metrics.v1.IntExemplar exemplars = 5;</code>
         */
        public Builder addExemplars(
                IntExemplar.Builder builderForValue) {
            if (exemplarsBuilder_ == null) {
                ensureExemplarsIsMutable();
                exemplars_.add(builderForValue.build());
                onChanged();
            } else {
                exemplarsBuilder_.addMessage(builderForValue.build());
            }
            return this;
        }

        /**
         * <pre>
         * (Optional) List of exemplars collected from
         * measurements that were used to form the data point
         * </pre>
         *
         * <code>repeated .opentelemetry.proto.metrics.v1.IntExemplar exemplars = 5;</code>
         */
        public Builder addExemplars(
                int index, IntExemplar.Builder builderForValue) {
            if (exemplarsBuilder_ == null) {
                ensureExemplarsIsMutable();
                exemplars_.add(index, builderForValue.build());
                onChanged();
            } else {
                exemplarsBuilder_.addMessage(index, builderForValue.build());
            }
            return this;
        }

        /**
         * <pre>
         * (Optional) List of exemplars collected from
         * measurements that were used to form the data point
         * </pre>
         *
         * <code>repeated .opentelemetry.proto.metrics.v1.IntExemplar exemplars = 5;</code>
         */
        public Builder addAllExemplars(
                Iterable<? extends IntExemplar> values) {
            if (exemplarsBuilder_ == null) {
                ensureExemplarsIsMutable();
                com.google.protobuf.AbstractMessageLite.Builder.addAll(
                        values, exemplars_);
                onChanged();
            } else {
                exemplarsBuilder_.addAllMessages(values);
            }
            return this;
        }

        /**
         * <pre>
         * (Optional) List of exemplars collected from
         * measurements that were used to form the data point
         * </pre>
         *
         * <code>repeated .opentelemetry.proto.metrics.v1.IntExemplar exemplars = 5;</code>
         */
        public Builder clearExemplars() {
            if (exemplarsBuilder_ == null) {
                exemplars_ = java.util.Collections.emptyList();
                bitField0_ = (bitField0_ & ~0x00000002);
                onChanged();
            } else {
                exemplarsBuilder_.clear();
            }
            return this;
        }

        /**
         * <pre>
         * (Optional) List of exemplars collected from
         * measurements that were used to form the data point
         * </pre>
         *
         * <code>repeated .opentelemetry.proto.metrics.v1.IntExemplar exemplars = 5;</code>
         */
        public Builder removeExemplars(int index) {
            if (exemplarsBuilder_ == null) {
                ensureExemplarsIsMutable();
                exemplars_.remove(index);
                onChanged();
            } else {
                exemplarsBuilder_.remove(index);
            }
            return this;
        }

        /**
         * <pre>
         * (Optional) List of exemplars collected from
         * measurements that were used to form the data point
         * </pre>
         *
         * <code>repeated .opentelemetry.proto.metrics.v1.IntExemplar exemplars = 5;</code>
         */
        public IntExemplar.Builder getExemplarsBuilder(
                int index) {
            return getExemplarsFieldBuilder().getBuilder(index);
        }

        /**
         * <pre>
         * (Optional) List of exemplars collected from
         * measurements that were used to form the data point
         * </pre>
         *
         * <code>repeated .opentelemetry.proto.metrics.v1.IntExemplar exemplars = 5;</code>
         */
        public IntExemplarOrBuilder getExemplarsOrBuilder(
                int index) {
            if (exemplarsBuilder_ == null) {
                return exemplars_.get(index);
            } else {
                return exemplarsBuilder_.getMessageOrBuilder(index);
            }
        }

        /**
         * <pre>
         * (Optional) List of exemplars collected from
         * measurements that were used to form the data point
         * </pre>
         *
         * <code>repeated .opentelemetry.proto.metrics.v1.IntExemplar exemplars = 5;</code>
         */
        public java.util.List<? extends IntExemplarOrBuilder>
        getExemplarsOrBuilderList() {
            if (exemplarsBuilder_ != null) {
                return exemplarsBuilder_.getMessageOrBuilderList();
            } else {
                return java.util.Collections.unmodifiableList(exemplars_);
            }
        }

        /**
         * <pre>
         * (Optional) List of exemplars collected from
         * measurements that were used to form the data point
         * </pre>
         *
         * <code>repeated .opentelemetry.proto.metrics.v1.IntExemplar exemplars = 5;</code>
         */
        public IntExemplar.Builder addExemplarsBuilder() {
            return getExemplarsFieldBuilder().addBuilder(
                    IntExemplar.getDefaultInstance());
        }

        /**
         * <pre>
         * (Optional) List of exemplars collected from
         * measurements that were used to form the data point
         * </pre>
         *
         * <code>repeated .opentelemetry.proto.metrics.v1.IntExemplar exemplars = 5;</code>
         */
        public IntExemplar.Builder addExemplarsBuilder(
                int index) {
            return getExemplarsFieldBuilder().addBuilder(
                    index, IntExemplar.getDefaultInstance());
        }

        /**
         * <pre>
         * (Optional) List of exemplars collected from
         * measurements that were used to form the data point
         * </pre>
         *
         * <code>repeated .opentelemetry.proto.metrics.v1.IntExemplar exemplars = 5;</code>
         */
        public java.util.List<IntExemplar.Builder>
        getExemplarsBuilderList() {
            return getExemplarsFieldBuilder().getBuilderList();
        }

        private com.google.protobuf.RepeatedFieldBuilderV3<
                IntExemplar, IntExemplar.Builder, IntExemplarOrBuilder>
        getExemplarsFieldBuilder() {
            if (exemplarsBuilder_ == null) {
                exemplarsBuilder_ = new com.google.protobuf.RepeatedFieldBuilderV3<
                        IntExemplar, IntExemplar.Builder, IntExemplarOrBuilder>(
                        exemplars_,
                        ((bitField0_ & 0x00000002) != 0),
                        getParentForChildren(),
                        isClean());
                exemplars_ = null;
            }
            return exemplarsBuilder_;
        }

        @Override
        public final Builder setUnknownFields(
                final com.google.protobuf.UnknownFieldSet unknownFields) {
            return super.setUnknownFields(unknownFields);
        }

        @Override
        public final Builder mergeUnknownFields(
                final com.google.protobuf.UnknownFieldSet unknownFields) {
            return super.mergeUnknownFields(unknownFields);
        }


        // @@protoc_insertion_point(builder_scope:opentelemetry.proto.metrics.v1.IntDataPoint)
    }

    // @@protoc_insertion_point(class_scope:opentelemetry.proto.metrics.v1.IntDataPoint)
    private static final IntDataPoint DEFAULT_INSTANCE;

    static {
        DEFAULT_INSTANCE = new IntDataPoint();
    }

    public static IntDataPoint getDefaultInstance() {
        return DEFAULT_INSTANCE;
    }

    private static final com.google.protobuf.Parser<IntDataPoint>
            PARSER = new com.google.protobuf.AbstractParser<IntDataPoint>() {
        @Override
        public IntDataPoint parsePartialFrom(
                com.google.protobuf.CodedInputStream input,
                com.google.protobuf.ExtensionRegistryLite extensionRegistry)
                throws com.google.protobuf.InvalidProtocolBufferException {
            return new IntDataPoint(input, extensionRegistry);
        }
    };

    public static com.google.protobuf.Parser<IntDataPoint> parser() {
        return PARSER;
    }

    @Override
    public com.google.protobuf.Parser<IntDataPoint> getParserForType() {
        return PARSER;
    }

    @Override
    public IntDataPoint getDefaultInstanceForType() {
        return DEFAULT_INSTANCE;
    }

}

