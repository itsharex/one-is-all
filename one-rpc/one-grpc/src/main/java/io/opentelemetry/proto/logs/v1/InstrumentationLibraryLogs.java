// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: opentelemetry/proto/logs/v1/logs.proto

package io.opentelemetry.proto.logs.v1;

/**
 * <pre>
 * A collection of Logs produced by an InstrumentationLibrary.
 * </pre>
 * <p>
 * Protobuf type {@code opentelemetry.proto.logs.v1.InstrumentationLibraryLogs}
 */
public final class InstrumentationLibraryLogs extends
        com.google.protobuf.GeneratedMessageV3 implements
        // @@protoc_insertion_point(message_implements:opentelemetry.proto.logs.v1.InstrumentationLibraryLogs)
        InstrumentationLibraryLogsOrBuilder {
    private static final long serialVersionUID = 0L;

    // Use InstrumentationLibraryLogs.newBuilder() to construct.
    private InstrumentationLibraryLogs(com.google.protobuf.GeneratedMessageV3.Builder<?> builder) {
        super(builder);
    }

    private InstrumentationLibraryLogs() {
        logs_ = java.util.Collections.emptyList();
        schemaUrl_ = "";
    }

    @Override
    @SuppressWarnings({"unused"})
    protected Object newInstance(
            UnusedPrivateParameter unused) {
        return new InstrumentationLibraryLogs();
    }

    @Override
    public final com.google.protobuf.UnknownFieldSet
    getUnknownFields() {
        return this.unknownFields;
    }

    private InstrumentationLibraryLogs(
            com.google.protobuf.CodedInputStream input,
            com.google.protobuf.ExtensionRegistryLite extensionRegistry)
            throws com.google.protobuf.InvalidProtocolBufferException {
        this();
        if (extensionRegistry == null) {
            throw new NullPointerException();
        }
        int mutable_bitField0_ = 0;
        com.google.protobuf.UnknownFieldSet.Builder unknownFields =
                com.google.protobuf.UnknownFieldSet.newBuilder();
        try {
            boolean done = false;
            while (!done) {
                int tag = input.readTag();
                switch (tag) {
                    case 0:
                        done = true;
                        break;
                    case 10: {
                        io.opentelemetry.proto.common.v1.InstrumentationLibrary.Builder subBuilder = null;
                        if (instrumentationLibrary_ != null) {
                            subBuilder = instrumentationLibrary_.toBuilder();
                        }
                        instrumentationLibrary_ = input.readMessage(io.opentelemetry.proto.common.v1.InstrumentationLibrary.parser(), extensionRegistry);
                        if (subBuilder != null) {
                            subBuilder.mergeFrom(instrumentationLibrary_);
                            instrumentationLibrary_ = subBuilder.buildPartial();
                        }

                        break;
                    }
                    case 18: {
                        if (!((mutable_bitField0_ & 0x00000001) != 0)) {
                            logs_ = new java.util.ArrayList<LogRecord>();
                            mutable_bitField0_ |= 0x00000001;
                        }
                        logs_.add(
                                input.readMessage(LogRecord.parser(), extensionRegistry));
                        break;
                    }
                    case 26: {
                        String s = input.readStringRequireUtf8();

                        schemaUrl_ = s;
                        break;
                    }
                    default: {
                        if (!parseUnknownField(
                                input, unknownFields, extensionRegistry, tag)) {
                            done = true;
                        }
                        break;
                    }
                }
            }
        } catch (com.google.protobuf.InvalidProtocolBufferException e) {
            throw e.setUnfinishedMessage(this);
        } catch (java.io.IOException e) {
            throw new com.google.protobuf.InvalidProtocolBufferException(
                    e).setUnfinishedMessage(this);
        } finally {
            if (((mutable_bitField0_ & 0x00000001) != 0)) {
                logs_ = java.util.Collections.unmodifiableList(logs_);
            }
            this.unknownFields = unknownFields.build();
            makeExtensionsImmutable();
        }
    }

    public static final com.google.protobuf.Descriptors.Descriptor
    getDescriptor() {
        return LogsProto.internal_static_opentelemetry_proto_logs_v1_InstrumentationLibraryLogs_descriptor;
    }

    @Override
    protected FieldAccessorTable
    internalGetFieldAccessorTable() {
        return LogsProto.internal_static_opentelemetry_proto_logs_v1_InstrumentationLibraryLogs_fieldAccessorTable
                .ensureFieldAccessorsInitialized(
                        InstrumentationLibraryLogs.class, Builder.class);
    }

    public static final int INSTRUMENTATION_LIBRARY_FIELD_NUMBER = 1;
    private io.opentelemetry.proto.common.v1.InstrumentationLibrary instrumentationLibrary_;

    /**
     * <pre>
     * The instrumentation library information for the logs in this message.
     * Semantically when InstrumentationLibrary isn't set, it is equivalent with
     * an empty instrumentation library name (unknown).
     * </pre>
     *
     * <code>.opentelemetry.proto.common.v1.InstrumentationLibrary instrumentation_library = 1;</code>
     *
     * @return Whether the instrumentationLibrary field is set.
     */
    @Override
    public boolean hasInstrumentationLibrary() {
        return instrumentationLibrary_ != null;
    }

    /**
     * <pre>
     * The instrumentation library information for the logs in this message.
     * Semantically when InstrumentationLibrary isn't set, it is equivalent with
     * an empty instrumentation library name (unknown).
     * </pre>
     *
     * <code>.opentelemetry.proto.common.v1.InstrumentationLibrary instrumentation_library = 1;</code>
     *
     * @return The instrumentationLibrary.
     */
    @Override
    public io.opentelemetry.proto.common.v1.InstrumentationLibrary getInstrumentationLibrary() {
        return instrumentationLibrary_ == null ? io.opentelemetry.proto.common.v1.InstrumentationLibrary.getDefaultInstance() : instrumentationLibrary_;
    }

    /**
     * <pre>
     * The instrumentation library information for the logs in this message.
     * Semantically when InstrumentationLibrary isn't set, it is equivalent with
     * an empty instrumentation library name (unknown).
     * </pre>
     *
     * <code>.opentelemetry.proto.common.v1.InstrumentationLibrary instrumentation_library = 1;</code>
     */
    @Override
    public io.opentelemetry.proto.common.v1.InstrumentationLibraryOrBuilder getInstrumentationLibraryOrBuilder() {
        return getInstrumentationLibrary();
    }

    public static final int LOGS_FIELD_NUMBER = 2;
    private java.util.List<LogRecord> logs_;

    /**
     * <pre>
     * A list of log records.
     * </pre>
     *
     * <code>repeated .opentelemetry.proto.logs.v1.LogRecord logs = 2;</code>
     */
    @Override
    public java.util.List<LogRecord> getLogsList() {
        return logs_;
    }

    /**
     * <pre>
     * A list of log records.
     * </pre>
     *
     * <code>repeated .opentelemetry.proto.logs.v1.LogRecord logs = 2;</code>
     */
    @Override
    public java.util.List<? extends LogRecordOrBuilder>
    getLogsOrBuilderList() {
        return logs_;
    }

    /**
     * <pre>
     * A list of log records.
     * </pre>
     *
     * <code>repeated .opentelemetry.proto.logs.v1.LogRecord logs = 2;</code>
     */
    @Override
    public int getLogsCount() {
        return logs_.size();
    }

    /**
     * <pre>
     * A list of log records.
     * </pre>
     *
     * <code>repeated .opentelemetry.proto.logs.v1.LogRecord logs = 2;</code>
     */
    @Override
    public LogRecord getLogs(int index) {
        return logs_.get(index);
    }

    /**
     * <pre>
     * A list of log records.
     * </pre>
     *
     * <code>repeated .opentelemetry.proto.logs.v1.LogRecord logs = 2;</code>
     */
    @Override
    public LogRecordOrBuilder getLogsOrBuilder(
            int index) {
        return logs_.get(index);
    }

    public static final int SCHEMA_URL_FIELD_NUMBER = 3;
    private volatile Object schemaUrl_;

    /**
     * <pre>
     * This schema_url applies to all logs in the "logs" field.
     * </pre>
     *
     * <code>string schema_url = 3;</code>
     *
     * @return The schemaUrl.
     */
    @Override
    public String getSchemaUrl() {
        Object ref = schemaUrl_;
        if (ref instanceof String) {
            return (String) ref;
        } else {
            com.google.protobuf.ByteString bs =
                    (com.google.protobuf.ByteString) ref;
            String s = bs.toStringUtf8();
            schemaUrl_ = s;
            return s;
        }
    }

    /**
     * <pre>
     * This schema_url applies to all logs in the "logs" field.
     * </pre>
     *
     * <code>string schema_url = 3;</code>
     *
     * @return The bytes for schemaUrl.
     */
    @Override
    public com.google.protobuf.ByteString
    getSchemaUrlBytes() {
        Object ref = schemaUrl_;
        if (ref instanceof String) {
            com.google.protobuf.ByteString b =
                    com.google.protobuf.ByteString.copyFromUtf8(
                            (String) ref);
            schemaUrl_ = b;
            return b;
        } else {
            return (com.google.protobuf.ByteString) ref;
        }
    }

    private byte memoizedIsInitialized = -1;

    @Override
    public final boolean isInitialized() {
        byte isInitialized = memoizedIsInitialized;
        if (isInitialized == 1) return true;
        if (isInitialized == 0) return false;

        memoizedIsInitialized = 1;
        return true;
    }

    @Override
    public void writeTo(com.google.protobuf.CodedOutputStream output)
            throws java.io.IOException {
        if (instrumentationLibrary_ != null) {
            output.writeMessage(1, getInstrumentationLibrary());
        }
        for (int i = 0; i < logs_.size(); i++) {
            output.writeMessage(2, logs_.get(i));
        }
        if (!getSchemaUrlBytes().isEmpty()) {
            com.google.protobuf.GeneratedMessageV3.writeString(output, 3, schemaUrl_);
        }
        unknownFields.writeTo(output);
    }

    @Override
    public int getSerializedSize() {
        int size = memoizedSize;
        if (size != -1) return size;

        size = 0;
        if (instrumentationLibrary_ != null) {
            size += com.google.protobuf.CodedOutputStream
                    .computeMessageSize(1, getInstrumentationLibrary());
        }
        for (int i = 0; i < logs_.size(); i++) {
            size += com.google.protobuf.CodedOutputStream
                    .computeMessageSize(2, logs_.get(i));
        }
        if (!getSchemaUrlBytes().isEmpty()) {
            size += com.google.protobuf.GeneratedMessageV3.computeStringSize(3, schemaUrl_);
        }
        size += unknownFields.getSerializedSize();
        memoizedSize = size;
        return size;
    }

    @Override
    public boolean equals(final Object obj) {
        if (obj == this) {
            return true;
        }
        if (!(obj instanceof InstrumentationLibraryLogs)) {
            return super.equals(obj);
        }
        InstrumentationLibraryLogs other = (InstrumentationLibraryLogs) obj;

        if (hasInstrumentationLibrary() != other.hasInstrumentationLibrary()) return false;
        if (hasInstrumentationLibrary()) {
            if (!getInstrumentationLibrary()
                    .equals(other.getInstrumentationLibrary())) return false;
        }
        if (!getLogsList()
                .equals(other.getLogsList())) return false;
        if (!getSchemaUrl()
                .equals(other.getSchemaUrl())) return false;
        if (!unknownFields.equals(other.unknownFields)) return false;
        return true;
    }

    @Override
    public int hashCode() {
        if (memoizedHashCode != 0) {
            return memoizedHashCode;
        }
        int hash = 41;
        hash = (19 * hash) + getDescriptor().hashCode();
        if (hasInstrumentationLibrary()) {
            hash = (37 * hash) + INSTRUMENTATION_LIBRARY_FIELD_NUMBER;
            hash = (53 * hash) + getInstrumentationLibrary().hashCode();
        }
        if (getLogsCount() > 0) {
            hash = (37 * hash) + LOGS_FIELD_NUMBER;
            hash = (53 * hash) + getLogsList().hashCode();
        }
        hash = (37 * hash) + SCHEMA_URL_FIELD_NUMBER;
        hash = (53 * hash) + getSchemaUrl().hashCode();
        hash = (29 * hash) + unknownFields.hashCode();
        memoizedHashCode = hash;
        return hash;
    }

    public static InstrumentationLibraryLogs parseFrom(
            java.nio.ByteBuffer data)
            throws com.google.protobuf.InvalidProtocolBufferException {
        return PARSER.parseFrom(data);
    }

    public static InstrumentationLibraryLogs parseFrom(
            java.nio.ByteBuffer data,
            com.google.protobuf.ExtensionRegistryLite extensionRegistry)
            throws com.google.protobuf.InvalidProtocolBufferException {
        return PARSER.parseFrom(data, extensionRegistry);
    }

    public static InstrumentationLibraryLogs parseFrom(
            com.google.protobuf.ByteString data)
            throws com.google.protobuf.InvalidProtocolBufferException {
        return PARSER.parseFrom(data);
    }

    public static InstrumentationLibraryLogs parseFrom(
            com.google.protobuf.ByteString data,
            com.google.protobuf.ExtensionRegistryLite extensionRegistry)
            throws com.google.protobuf.InvalidProtocolBufferException {
        return PARSER.parseFrom(data, extensionRegistry);
    }

    public static InstrumentationLibraryLogs parseFrom(byte[] data)
            throws com.google.protobuf.InvalidProtocolBufferException {
        return PARSER.parseFrom(data);
    }

    public static InstrumentationLibraryLogs parseFrom(
            byte[] data,
            com.google.protobuf.ExtensionRegistryLite extensionRegistry)
            throws com.google.protobuf.InvalidProtocolBufferException {
        return PARSER.parseFrom(data, extensionRegistry);
    }

    public static InstrumentationLibraryLogs parseFrom(java.io.InputStream input)
            throws java.io.IOException {
        return com.google.protobuf.GeneratedMessageV3
                .parseWithIOException(PARSER, input);
    }

    public static InstrumentationLibraryLogs parseFrom(
            java.io.InputStream input,
            com.google.protobuf.ExtensionRegistryLite extensionRegistry)
            throws java.io.IOException {
        return com.google.protobuf.GeneratedMessageV3
                .parseWithIOException(PARSER, input, extensionRegistry);
    }

    public static InstrumentationLibraryLogs parseDelimitedFrom(java.io.InputStream input)
            throws java.io.IOException {
        return com.google.protobuf.GeneratedMessageV3
                .parseDelimitedWithIOException(PARSER, input);
    }

    public static InstrumentationLibraryLogs parseDelimitedFrom(
            java.io.InputStream input,
            com.google.protobuf.ExtensionRegistryLite extensionRegistry)
            throws java.io.IOException {
        return com.google.protobuf.GeneratedMessageV3
                .parseDelimitedWithIOException(PARSER, input, extensionRegistry);
    }

    public static InstrumentationLibraryLogs parseFrom(
            com.google.protobuf.CodedInputStream input)
            throws java.io.IOException {
        return com.google.protobuf.GeneratedMessageV3
                .parseWithIOException(PARSER, input);
    }

    public static InstrumentationLibraryLogs parseFrom(
            com.google.protobuf.CodedInputStream input,
            com.google.protobuf.ExtensionRegistryLite extensionRegistry)
            throws java.io.IOException {
        return com.google.protobuf.GeneratedMessageV3
                .parseWithIOException(PARSER, input, extensionRegistry);
    }

    @Override
    public Builder newBuilderForType() {
        return newBuilder();
    }

    public static Builder newBuilder() {
        return DEFAULT_INSTANCE.toBuilder();
    }

    public static Builder newBuilder(InstrumentationLibraryLogs prototype) {
        return DEFAULT_INSTANCE.toBuilder().mergeFrom(prototype);
    }

    @Override
    public Builder toBuilder() {
        return this == DEFAULT_INSTANCE
                ? new Builder() : new Builder().mergeFrom(this);
    }

    @Override
    protected Builder newBuilderForType(
            BuilderParent parent) {
        Builder builder = new Builder(parent);
        return builder;
    }

    /**
     * <pre>
     * A collection of Logs produced by an InstrumentationLibrary.
     * </pre>
     * <p>
     * Protobuf type {@code opentelemetry.proto.logs.v1.InstrumentationLibraryLogs}
     */
    public static final class Builder extends
            com.google.protobuf.GeneratedMessageV3.Builder<Builder> implements
            // @@protoc_insertion_point(builder_implements:opentelemetry.proto.logs.v1.InstrumentationLibraryLogs)
            InstrumentationLibraryLogsOrBuilder {
        public static final com.google.protobuf.Descriptors.Descriptor
        getDescriptor() {
            return LogsProto.internal_static_opentelemetry_proto_logs_v1_InstrumentationLibraryLogs_descriptor;
        }

        @Override
        protected FieldAccessorTable
        internalGetFieldAccessorTable() {
            return LogsProto.internal_static_opentelemetry_proto_logs_v1_InstrumentationLibraryLogs_fieldAccessorTable
                    .ensureFieldAccessorsInitialized(
                            InstrumentationLibraryLogs.class, Builder.class);
        }

        // Construct using io.opentelemetry.proto.logs.v1.InstrumentationLibraryLogs.newBuilder()
        private Builder() {
            maybeForceBuilderInitialization();
        }

        private Builder(
                BuilderParent parent) {
            super(parent);
            maybeForceBuilderInitialization();
        }

        private void maybeForceBuilderInitialization() {
            if (com.google.protobuf.GeneratedMessageV3
                    .alwaysUseFieldBuilders) {
                getLogsFieldBuilder();
            }
        }

        @Override
        public Builder clear() {
            super.clear();
            if (instrumentationLibraryBuilder_ == null) {
                instrumentationLibrary_ = null;
            } else {
                instrumentationLibrary_ = null;
                instrumentationLibraryBuilder_ = null;
            }
            if (logsBuilder_ == null) {
                logs_ = java.util.Collections.emptyList();
                bitField0_ = (bitField0_ & ~0x00000001);
            } else {
                logsBuilder_.clear();
            }
            schemaUrl_ = "";

            return this;
        }

        @Override
        public com.google.protobuf.Descriptors.Descriptor
        getDescriptorForType() {
            return LogsProto.internal_static_opentelemetry_proto_logs_v1_InstrumentationLibraryLogs_descriptor;
        }

        @Override
        public InstrumentationLibraryLogs getDefaultInstanceForType() {
            return InstrumentationLibraryLogs.getDefaultInstance();
        }

        @Override
        public InstrumentationLibraryLogs build() {
            InstrumentationLibraryLogs result = buildPartial();
            if (!result.isInitialized()) {
                throw newUninitializedMessageException(result);
            }
            return result;
        }

        @Override
        public InstrumentationLibraryLogs buildPartial() {
            InstrumentationLibraryLogs result = new InstrumentationLibraryLogs(this);
            int from_bitField0_ = bitField0_;
            if (instrumentationLibraryBuilder_ == null) {
                result.instrumentationLibrary_ = instrumentationLibrary_;
            } else {
                result.instrumentationLibrary_ = instrumentationLibraryBuilder_.build();
            }
            if (logsBuilder_ == null) {
                if (((bitField0_ & 0x00000001) != 0)) {
                    logs_ = java.util.Collections.unmodifiableList(logs_);
                    bitField0_ = (bitField0_ & ~0x00000001);
                }
                result.logs_ = logs_;
            } else {
                result.logs_ = logsBuilder_.build();
            }
            result.schemaUrl_ = schemaUrl_;
            onBuilt();
            return result;
        }

        @Override
        public Builder clone() {
            return super.clone();
        }

        @Override
        public Builder setField(
                com.google.protobuf.Descriptors.FieldDescriptor field,
                Object value) {
            return super.setField(field, value);
        }

        @Override
        public Builder clearField(
                com.google.protobuf.Descriptors.FieldDescriptor field) {
            return super.clearField(field);
        }

        @Override
        public Builder clearOneof(
                com.google.protobuf.Descriptors.OneofDescriptor oneof) {
            return super.clearOneof(oneof);
        }

        @Override
        public Builder setRepeatedField(
                com.google.protobuf.Descriptors.FieldDescriptor field,
                int index, Object value) {
            return super.setRepeatedField(field, index, value);
        }

        @Override
        public Builder addRepeatedField(
                com.google.protobuf.Descriptors.FieldDescriptor field,
                Object value) {
            return super.addRepeatedField(field, value);
        }

        @Override
        public Builder mergeFrom(com.google.protobuf.Message other) {
            if (other instanceof InstrumentationLibraryLogs) {
                return mergeFrom((InstrumentationLibraryLogs) other);
            } else {
                super.mergeFrom(other);
                return this;
            }
        }

        public Builder mergeFrom(InstrumentationLibraryLogs other) {
            if (other == InstrumentationLibraryLogs.getDefaultInstance()) return this;
            if (other.hasInstrumentationLibrary()) {
                mergeInstrumentationLibrary(other.getInstrumentationLibrary());
            }
            if (logsBuilder_ == null) {
                if (!other.logs_.isEmpty()) {
                    if (logs_.isEmpty()) {
                        logs_ = other.logs_;
                        bitField0_ = (bitField0_ & ~0x00000001);
                    } else {
                        ensureLogsIsMutable();
                        logs_.addAll(other.logs_);
                    }
                    onChanged();
                }
            } else {
                if (!other.logs_.isEmpty()) {
                    if (logsBuilder_.isEmpty()) {
                        logsBuilder_.dispose();
                        logsBuilder_ = null;
                        logs_ = other.logs_;
                        bitField0_ = (bitField0_ & ~0x00000001);
                        logsBuilder_ =
                                com.google.protobuf.GeneratedMessageV3.alwaysUseFieldBuilders ?
                                        getLogsFieldBuilder() : null;
                    } else {
                        logsBuilder_.addAllMessages(other.logs_);
                    }
                }
            }
            if (!other.getSchemaUrl().isEmpty()) {
                schemaUrl_ = other.schemaUrl_;
                onChanged();
            }
            this.mergeUnknownFields(other.unknownFields);
            onChanged();
            return this;
        }

        @Override
        public final boolean isInitialized() {
            return true;
        }

        @Override
        public Builder mergeFrom(
                com.google.protobuf.CodedInputStream input,
                com.google.protobuf.ExtensionRegistryLite extensionRegistry)
                throws java.io.IOException {
            InstrumentationLibraryLogs parsedMessage = null;
            try {
                parsedMessage = PARSER.parsePartialFrom(input, extensionRegistry);
            } catch (com.google.protobuf.InvalidProtocolBufferException e) {
                parsedMessage = (InstrumentationLibraryLogs) e.getUnfinishedMessage();
                throw e.unwrapIOException();
            } finally {
                if (parsedMessage != null) {
                    mergeFrom(parsedMessage);
                }
            }
            return this;
        }

        private int bitField0_;

        private io.opentelemetry.proto.common.v1.InstrumentationLibrary instrumentationLibrary_;
        private com.google.protobuf.SingleFieldBuilderV3<
                io.opentelemetry.proto.common.v1.InstrumentationLibrary, io.opentelemetry.proto.common.v1.InstrumentationLibrary.Builder, io.opentelemetry.proto.common.v1.InstrumentationLibraryOrBuilder> instrumentationLibraryBuilder_;

        /**
         * <pre>
         * The instrumentation library information for the logs in this message.
         * Semantically when InstrumentationLibrary isn't set, it is equivalent with
         * an empty instrumentation library name (unknown).
         * </pre>
         *
         * <code>.opentelemetry.proto.common.v1.InstrumentationLibrary instrumentation_library = 1;</code>
         *
         * @return Whether the instrumentationLibrary field is set.
         */
        @Override
        public boolean hasInstrumentationLibrary() {
            return instrumentationLibraryBuilder_ != null || instrumentationLibrary_ != null;
        }

        /**
         * <pre>
         * The instrumentation library information for the logs in this message.
         * Semantically when InstrumentationLibrary isn't set, it is equivalent with
         * an empty instrumentation library name (unknown).
         * </pre>
         *
         * <code>.opentelemetry.proto.common.v1.InstrumentationLibrary instrumentation_library = 1;</code>
         *
         * @return The instrumentationLibrary.
         */
        public io.opentelemetry.proto.common.v1.InstrumentationLibrary getInstrumentationLibrary() {
            if (instrumentationLibraryBuilder_ == null) {
                return instrumentationLibrary_ == null ? io.opentelemetry.proto.common.v1.InstrumentationLibrary.getDefaultInstance() : instrumentationLibrary_;
            } else {
                return instrumentationLibraryBuilder_.getMessage();
            }
        }

        /**
         * <pre>
         * The instrumentation library information for the logs in this message.
         * Semantically when InstrumentationLibrary isn't set, it is equivalent with
         * an empty instrumentation library name (unknown).
         * </pre>
         *
         * <code>.opentelemetry.proto.common.v1.InstrumentationLibrary instrumentation_library = 1;</code>
         */
        public Builder setInstrumentationLibrary(io.opentelemetry.proto.common.v1.InstrumentationLibrary value) {
            if (instrumentationLibraryBuilder_ == null) {
                if (value == null) {
                    throw new NullPointerException();
                }
                instrumentationLibrary_ = value;
                onChanged();
            } else {
                instrumentationLibraryBuilder_.setMessage(value);
            }

            return this;
        }

        /**
         * <pre>
         * The instrumentation library information for the logs in this message.
         * Semantically when InstrumentationLibrary isn't set, it is equivalent with
         * an empty instrumentation library name (unknown).
         * </pre>
         *
         * <code>.opentelemetry.proto.common.v1.InstrumentationLibrary instrumentation_library = 1;</code>
         */
        public Builder setInstrumentationLibrary(
                io.opentelemetry.proto.common.v1.InstrumentationLibrary.Builder builderForValue) {
            if (instrumentationLibraryBuilder_ == null) {
                instrumentationLibrary_ = builderForValue.build();
                onChanged();
            } else {
                instrumentationLibraryBuilder_.setMessage(builderForValue.build());
            }

            return this;
        }

        /**
         * <pre>
         * The instrumentation library information for the logs in this message.
         * Semantically when InstrumentationLibrary isn't set, it is equivalent with
         * an empty instrumentation library name (unknown).
         * </pre>
         *
         * <code>.opentelemetry.proto.common.v1.InstrumentationLibrary instrumentation_library = 1;</code>
         */
        public Builder mergeInstrumentationLibrary(io.opentelemetry.proto.common.v1.InstrumentationLibrary value) {
            if (instrumentationLibraryBuilder_ == null) {
                if (instrumentationLibrary_ != null) {
                    instrumentationLibrary_ =
                            io.opentelemetry.proto.common.v1.InstrumentationLibrary.newBuilder(instrumentationLibrary_).mergeFrom(value).buildPartial();
                } else {
                    instrumentationLibrary_ = value;
                }
                onChanged();
            } else {
                instrumentationLibraryBuilder_.mergeFrom(value);
            }

            return this;
        }

        /**
         * <pre>
         * The instrumentation library information for the logs in this message.
         * Semantically when InstrumentationLibrary isn't set, it is equivalent with
         * an empty instrumentation library name (unknown).
         * </pre>
         *
         * <code>.opentelemetry.proto.common.v1.InstrumentationLibrary instrumentation_library = 1;</code>
         */
        public Builder clearInstrumentationLibrary() {
            if (instrumentationLibraryBuilder_ == null) {
                instrumentationLibrary_ = null;
                onChanged();
            } else {
                instrumentationLibrary_ = null;
                instrumentationLibraryBuilder_ = null;
            }

            return this;
        }

        /**
         * <pre>
         * The instrumentation library information for the logs in this message.
         * Semantically when InstrumentationLibrary isn't set, it is equivalent with
         * an empty instrumentation library name (unknown).
         * </pre>
         *
         * <code>.opentelemetry.proto.common.v1.InstrumentationLibrary instrumentation_library = 1;</code>
         */
        public io.opentelemetry.proto.common.v1.InstrumentationLibrary.Builder getInstrumentationLibraryBuilder() {

            onChanged();
            return getInstrumentationLibraryFieldBuilder().getBuilder();
        }

        /**
         * <pre>
         * The instrumentation library information for the logs in this message.
         * Semantically when InstrumentationLibrary isn't set, it is equivalent with
         * an empty instrumentation library name (unknown).
         * </pre>
         *
         * <code>.opentelemetry.proto.common.v1.InstrumentationLibrary instrumentation_library = 1;</code>
         */
        public io.opentelemetry.proto.common.v1.InstrumentationLibraryOrBuilder getInstrumentationLibraryOrBuilder() {
            if (instrumentationLibraryBuilder_ != null) {
                return instrumentationLibraryBuilder_.getMessageOrBuilder();
            } else {
                return instrumentationLibrary_ == null ?
                        io.opentelemetry.proto.common.v1.InstrumentationLibrary.getDefaultInstance() : instrumentationLibrary_;
            }
        }

        /**
         * <pre>
         * The instrumentation library information for the logs in this message.
         * Semantically when InstrumentationLibrary isn't set, it is equivalent with
         * an empty instrumentation library name (unknown).
         * </pre>
         *
         * <code>.opentelemetry.proto.common.v1.InstrumentationLibrary instrumentation_library = 1;</code>
         */
        private com.google.protobuf.SingleFieldBuilderV3<
                io.opentelemetry.proto.common.v1.InstrumentationLibrary, io.opentelemetry.proto.common.v1.InstrumentationLibrary.Builder, io.opentelemetry.proto.common.v1.InstrumentationLibraryOrBuilder>
        getInstrumentationLibraryFieldBuilder() {
            if (instrumentationLibraryBuilder_ == null) {
                instrumentationLibraryBuilder_ = new com.google.protobuf.SingleFieldBuilderV3<
                        io.opentelemetry.proto.common.v1.InstrumentationLibrary, io.opentelemetry.proto.common.v1.InstrumentationLibrary.Builder, io.opentelemetry.proto.common.v1.InstrumentationLibraryOrBuilder>(
                        getInstrumentationLibrary(),
                        getParentForChildren(),
                        isClean());
                instrumentationLibrary_ = null;
            }
            return instrumentationLibraryBuilder_;
        }

        private java.util.List<LogRecord> logs_ =
                java.util.Collections.emptyList();

        private void ensureLogsIsMutable() {
            if (!((bitField0_ & 0x00000001) != 0)) {
                logs_ = new java.util.ArrayList<LogRecord>(logs_);
                bitField0_ |= 0x00000001;
            }
        }

        private com.google.protobuf.RepeatedFieldBuilderV3<
                LogRecord, LogRecord.Builder, LogRecordOrBuilder> logsBuilder_;

        /**
         * <pre>
         * A list of log records.
         * </pre>
         *
         * <code>repeated .opentelemetry.proto.logs.v1.LogRecord logs = 2;</code>
         */
        public java.util.List<LogRecord> getLogsList() {
            if (logsBuilder_ == null) {
                return java.util.Collections.unmodifiableList(logs_);
            } else {
                return logsBuilder_.getMessageList();
            }
        }

        /**
         * <pre>
         * A list of log records.
         * </pre>
         *
         * <code>repeated .opentelemetry.proto.logs.v1.LogRecord logs = 2;</code>
         */
        public int getLogsCount() {
            if (logsBuilder_ == null) {
                return logs_.size();
            } else {
                return logsBuilder_.getCount();
            }
        }

        /**
         * <pre>
         * A list of log records.
         * </pre>
         *
         * <code>repeated .opentelemetry.proto.logs.v1.LogRecord logs = 2;</code>
         */
        public LogRecord getLogs(int index) {
            if (logsBuilder_ == null) {
                return logs_.get(index);
            } else {
                return logsBuilder_.getMessage(index);
            }
        }

        /**
         * <pre>
         * A list of log records.
         * </pre>
         *
         * <code>repeated .opentelemetry.proto.logs.v1.LogRecord logs = 2;</code>
         */
        public Builder setLogs(
                int index, LogRecord value) {
            if (logsBuilder_ == null) {
                if (value == null) {
                    throw new NullPointerException();
                }
                ensureLogsIsMutable();
                logs_.set(index, value);
                onChanged();
            } else {
                logsBuilder_.setMessage(index, value);
            }
            return this;
        }

        /**
         * <pre>
         * A list of log records.
         * </pre>
         *
         * <code>repeated .opentelemetry.proto.logs.v1.LogRecord logs = 2;</code>
         */
        public Builder setLogs(
                int index, LogRecord.Builder builderForValue) {
            if (logsBuilder_ == null) {
                ensureLogsIsMutable();
                logs_.set(index, builderForValue.build());
                onChanged();
            } else {
                logsBuilder_.setMessage(index, builderForValue.build());
            }
            return this;
        }

        /**
         * <pre>
         * A list of log records.
         * </pre>
         *
         * <code>repeated .opentelemetry.proto.logs.v1.LogRecord logs = 2;</code>
         */
        public Builder addLogs(LogRecord value) {
            if (logsBuilder_ == null) {
                if (value == null) {
                    throw new NullPointerException();
                }
                ensureLogsIsMutable();
                logs_.add(value);
                onChanged();
            } else {
                logsBuilder_.addMessage(value);
            }
            return this;
        }

        /**
         * <pre>
         * A list of log records.
         * </pre>
         *
         * <code>repeated .opentelemetry.proto.logs.v1.LogRecord logs = 2;</code>
         */
        public Builder addLogs(
                int index, LogRecord value) {
            if (logsBuilder_ == null) {
                if (value == null) {
                    throw new NullPointerException();
                }
                ensureLogsIsMutable();
                logs_.add(index, value);
                onChanged();
            } else {
                logsBuilder_.addMessage(index, value);
            }
            return this;
        }

        /**
         * <pre>
         * A list of log records.
         * </pre>
         *
         * <code>repeated .opentelemetry.proto.logs.v1.LogRecord logs = 2;</code>
         */
        public Builder addLogs(
                LogRecord.Builder builderForValue) {
            if (logsBuilder_ == null) {
                ensureLogsIsMutable();
                logs_.add(builderForValue.build());
                onChanged();
            } else {
                logsBuilder_.addMessage(builderForValue.build());
            }
            return this;
        }

        /**
         * <pre>
         * A list of log records.
         * </pre>
         *
         * <code>repeated .opentelemetry.proto.logs.v1.LogRecord logs = 2;</code>
         */
        public Builder addLogs(
                int index, LogRecord.Builder builderForValue) {
            if (logsBuilder_ == null) {
                ensureLogsIsMutable();
                logs_.add(index, builderForValue.build());
                onChanged();
            } else {
                logsBuilder_.addMessage(index, builderForValue.build());
            }
            return this;
        }

        /**
         * <pre>
         * A list of log records.
         * </pre>
         *
         * <code>repeated .opentelemetry.proto.logs.v1.LogRecord logs = 2;</code>
         */
        public Builder addAllLogs(
                Iterable<? extends LogRecord> values) {
            if (logsBuilder_ == null) {
                ensureLogsIsMutable();
                com.google.protobuf.AbstractMessageLite.Builder.addAll(
                        values, logs_);
                onChanged();
            } else {
                logsBuilder_.addAllMessages(values);
            }
            return this;
        }

        /**
         * <pre>
         * A list of log records.
         * </pre>
         *
         * <code>repeated .opentelemetry.proto.logs.v1.LogRecord logs = 2;</code>
         */
        public Builder clearLogs() {
            if (logsBuilder_ == null) {
                logs_ = java.util.Collections.emptyList();
                bitField0_ = (bitField0_ & ~0x00000001);
                onChanged();
            } else {
                logsBuilder_.clear();
            }
            return this;
        }

        /**
         * <pre>
         * A list of log records.
         * </pre>
         *
         * <code>repeated .opentelemetry.proto.logs.v1.LogRecord logs = 2;</code>
         */
        public Builder removeLogs(int index) {
            if (logsBuilder_ == null) {
                ensureLogsIsMutable();
                logs_.remove(index);
                onChanged();
            } else {
                logsBuilder_.remove(index);
            }
            return this;
        }

        /**
         * <pre>
         * A list of log records.
         * </pre>
         *
         * <code>repeated .opentelemetry.proto.logs.v1.LogRecord logs = 2;</code>
         */
        public LogRecord.Builder getLogsBuilder(
                int index) {
            return getLogsFieldBuilder().getBuilder(index);
        }

        /**
         * <pre>
         * A list of log records.
         * </pre>
         *
         * <code>repeated .opentelemetry.proto.logs.v1.LogRecord logs = 2;</code>
         */
        public LogRecordOrBuilder getLogsOrBuilder(
                int index) {
            if (logsBuilder_ == null) {
                return logs_.get(index);
            } else {
                return logsBuilder_.getMessageOrBuilder(index);
            }
        }

        /**
         * <pre>
         * A list of log records.
         * </pre>
         *
         * <code>repeated .opentelemetry.proto.logs.v1.LogRecord logs = 2;</code>
         */
        public java.util.List<? extends LogRecordOrBuilder>
        getLogsOrBuilderList() {
            if (logsBuilder_ != null) {
                return logsBuilder_.getMessageOrBuilderList();
            } else {
                return java.util.Collections.unmodifiableList(logs_);
            }
        }

        /**
         * <pre>
         * A list of log records.
         * </pre>
         *
         * <code>repeated .opentelemetry.proto.logs.v1.LogRecord logs = 2;</code>
         */
        public LogRecord.Builder addLogsBuilder() {
            return getLogsFieldBuilder().addBuilder(
                    LogRecord.getDefaultInstance());
        }

        /**
         * <pre>
         * A list of log records.
         * </pre>
         *
         * <code>repeated .opentelemetry.proto.logs.v1.LogRecord logs = 2;</code>
         */
        public LogRecord.Builder addLogsBuilder(
                int index) {
            return getLogsFieldBuilder().addBuilder(
                    index, LogRecord.getDefaultInstance());
        }

        /**
         * <pre>
         * A list of log records.
         * </pre>
         *
         * <code>repeated .opentelemetry.proto.logs.v1.LogRecord logs = 2;</code>
         */
        public java.util.List<LogRecord.Builder>
        getLogsBuilderList() {
            return getLogsFieldBuilder().getBuilderList();
        }

        private com.google.protobuf.RepeatedFieldBuilderV3<
                LogRecord, LogRecord.Builder, LogRecordOrBuilder>
        getLogsFieldBuilder() {
            if (logsBuilder_ == null) {
                logsBuilder_ = new com.google.protobuf.RepeatedFieldBuilderV3<
                        LogRecord, LogRecord.Builder, LogRecordOrBuilder>(
                        logs_,
                        ((bitField0_ & 0x00000001) != 0),
                        getParentForChildren(),
                        isClean());
                logs_ = null;
            }
            return logsBuilder_;
        }

        private Object schemaUrl_ = "";

        /**
         * <pre>
         * This schema_url applies to all logs in the "logs" field.
         * </pre>
         *
         * <code>string schema_url = 3;</code>
         *
         * @return The schemaUrl.
         */
        public String getSchemaUrl() {
            Object ref = schemaUrl_;
            if (!(ref instanceof String)) {
                com.google.protobuf.ByteString bs =
                        (com.google.protobuf.ByteString) ref;
                String s = bs.toStringUtf8();
                schemaUrl_ = s;
                return s;
            } else {
                return (String) ref;
            }
        }

        /**
         * <pre>
         * This schema_url applies to all logs in the "logs" field.
         * </pre>
         *
         * <code>string schema_url = 3;</code>
         *
         * @return The bytes for schemaUrl.
         */
        public com.google.protobuf.ByteString
        getSchemaUrlBytes() {
            Object ref = schemaUrl_;
            if (ref instanceof String) {
                com.google.protobuf.ByteString b =
                        com.google.protobuf.ByteString.copyFromUtf8(
                                (String) ref);
                schemaUrl_ = b;
                return b;
            } else {
                return (com.google.protobuf.ByteString) ref;
            }
        }

        /**
         * <pre>
         * This schema_url applies to all logs in the "logs" field.
         * </pre>
         *
         * <code>string schema_url = 3;</code>
         *
         * @param value The schemaUrl to set.
         * @return This builder for chaining.
         */
        public Builder setSchemaUrl(
                String value) {
            if (value == null) {
                throw new NullPointerException();
            }

            schemaUrl_ = value;
            onChanged();
            return this;
        }

        /**
         * <pre>
         * This schema_url applies to all logs in the "logs" field.
         * </pre>
         *
         * <code>string schema_url = 3;</code>
         *
         * @return This builder for chaining.
         */
        public Builder clearSchemaUrl() {

            schemaUrl_ = getDefaultInstance().getSchemaUrl();
            onChanged();
            return this;
        }

        /**
         * <pre>
         * This schema_url applies to all logs in the "logs" field.
         * </pre>
         *
         * <code>string schema_url = 3;</code>
         *
         * @param value The bytes for schemaUrl to set.
         * @return This builder for chaining.
         */
        public Builder setSchemaUrlBytes(
                com.google.protobuf.ByteString value) {
            if (value == null) {
                throw new NullPointerException();
            }
            checkByteStringIsUtf8(value);

            schemaUrl_ = value;
            onChanged();
            return this;
        }

        @Override
        public final Builder setUnknownFields(
                final com.google.protobuf.UnknownFieldSet unknownFields) {
            return super.setUnknownFields(unknownFields);
        }

        @Override
        public final Builder mergeUnknownFields(
                final com.google.protobuf.UnknownFieldSet unknownFields) {
            return super.mergeUnknownFields(unknownFields);
        }


        // @@protoc_insertion_point(builder_scope:opentelemetry.proto.logs.v1.InstrumentationLibraryLogs)
    }

    // @@protoc_insertion_point(class_scope:opentelemetry.proto.logs.v1.InstrumentationLibraryLogs)
    private static final InstrumentationLibraryLogs DEFAULT_INSTANCE;

    static {
        DEFAULT_INSTANCE = new InstrumentationLibraryLogs();
    }

    public static InstrumentationLibraryLogs getDefaultInstance() {
        return DEFAULT_INSTANCE;
    }

    private static final com.google.protobuf.Parser<InstrumentationLibraryLogs>
            PARSER = new com.google.protobuf.AbstractParser<InstrumentationLibraryLogs>() {
        @Override
        public InstrumentationLibraryLogs parsePartialFrom(
                com.google.protobuf.CodedInputStream input,
                com.google.protobuf.ExtensionRegistryLite extensionRegistry)
                throws com.google.protobuf.InvalidProtocolBufferException {
            return new InstrumentationLibraryLogs(input, extensionRegistry);
        }
    };

    public static com.google.protobuf.Parser<InstrumentationLibraryLogs> parser() {
        return PARSER;
    }

    @Override
    public com.google.protobuf.Parser<InstrumentationLibraryLogs> getParserForType() {
        return PARSER;
    }

    @Override
    public InstrumentationLibraryLogs getDefaultInstanceForType() {
        return DEFAULT_INSTANCE;
    }

}

