// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: opentelemetry/proto/trace/v1/trace.proto

package io.opentelemetry.proto.trace.v1;

/**
 * <pre>
 * The Status type defines a logical error model that is suitable for different
 * programming environments, including REST APIs and RPC APIs.
 * </pre>
 * <p>
 * Protobuf type {@code opentelemetry.proto.trace.v1.Status}
 */
public final class Status extends
        com.google.protobuf.GeneratedMessageV3 implements
        // @@protoc_insertion_point(message_implements:opentelemetry.proto.trace.v1.Status)
        StatusOrBuilder {
    private static final long serialVersionUID = 0L;

    // Use Status.newBuilder() to construct.
    private Status(com.google.protobuf.GeneratedMessageV3.Builder<?> builder) {
        super(builder);
    }

    private Status() {
        deprecatedCode_ = 0;
        message_ = "";
        code_ = 0;
    }

    @Override
    @SuppressWarnings({"unused"})
    protected Object newInstance(
            UnusedPrivateParameter unused) {
        return new Status();
    }

    @Override
    public final com.google.protobuf.UnknownFieldSet
    getUnknownFields() {
        return this.unknownFields;
    }

    private Status(
            com.google.protobuf.CodedInputStream input,
            com.google.protobuf.ExtensionRegistryLite extensionRegistry)
            throws com.google.protobuf.InvalidProtocolBufferException {
        this();
        if (extensionRegistry == null) {
            throw new NullPointerException();
        }
        com.google.protobuf.UnknownFieldSet.Builder unknownFields =
                com.google.protobuf.UnknownFieldSet.newBuilder();
        try {
            boolean done = false;
            while (!done) {
                int tag = input.readTag();
                switch (tag) {
                    case 0:
                        done = true;
                        break;
                    case 8: {
                        int rawValue = input.readEnum();

                        deprecatedCode_ = rawValue;
                        break;
                    }
                    case 18: {
                        String s = input.readStringRequireUtf8();

                        message_ = s;
                        break;
                    }
                    case 24: {
                        int rawValue = input.readEnum();

                        code_ = rawValue;
                        break;
                    }
                    default: {
                        if (!parseUnknownField(
                                input, unknownFields, extensionRegistry, tag)) {
                            done = true;
                        }
                        break;
                    }
                }
            }
        } catch (com.google.protobuf.InvalidProtocolBufferException e) {
            throw e.setUnfinishedMessage(this);
        } catch (java.io.IOException e) {
            throw new com.google.protobuf.InvalidProtocolBufferException(
                    e).setUnfinishedMessage(this);
        } finally {
            this.unknownFields = unknownFields.build();
            makeExtensionsImmutable();
        }
    }

    public static final com.google.protobuf.Descriptors.Descriptor
    getDescriptor() {
        return TraceProto.internal_static_opentelemetry_proto_trace_v1_Status_descriptor;
    }

    @Override
    protected FieldAccessorTable
    internalGetFieldAccessorTable() {
        return TraceProto.internal_static_opentelemetry_proto_trace_v1_Status_fieldAccessorTable
                .ensureFieldAccessorsInitialized(
                        Status.class, Builder.class);
    }

    /**
     * Protobuf enum {@code opentelemetry.proto.trace.v1.Status.DeprecatedStatusCode}
     */
    public enum DeprecatedStatusCode
            implements com.google.protobuf.ProtocolMessageEnum {
        /**
         * <code>DEPRECATED_STATUS_CODE_OK = 0;</code>
         */
        DEPRECATED_STATUS_CODE_OK(0),
        /**
         * <code>DEPRECATED_STATUS_CODE_CANCELLED = 1;</code>
         */
        DEPRECATED_STATUS_CODE_CANCELLED(1),
        /**
         * <code>DEPRECATED_STATUS_CODE_UNKNOWN_ERROR = 2;</code>
         */
        DEPRECATED_STATUS_CODE_UNKNOWN_ERROR(2),
        /**
         * <code>DEPRECATED_STATUS_CODE_INVALID_ARGUMENT = 3;</code>
         */
        DEPRECATED_STATUS_CODE_INVALID_ARGUMENT(3),
        /**
         * <code>DEPRECATED_STATUS_CODE_DEADLINE_EXCEEDED = 4;</code>
         */
        DEPRECATED_STATUS_CODE_DEADLINE_EXCEEDED(4),
        /**
         * <code>DEPRECATED_STATUS_CODE_NOT_FOUND = 5;</code>
         */
        DEPRECATED_STATUS_CODE_NOT_FOUND(5),
        /**
         * <code>DEPRECATED_STATUS_CODE_ALREADY_EXISTS = 6;</code>
         */
        DEPRECATED_STATUS_CODE_ALREADY_EXISTS(6),
        /**
         * <code>DEPRECATED_STATUS_CODE_PERMISSION_DENIED = 7;</code>
         */
        DEPRECATED_STATUS_CODE_PERMISSION_DENIED(7),
        /**
         * <code>DEPRECATED_STATUS_CODE_RESOURCE_EXHAUSTED = 8;</code>
         */
        DEPRECATED_STATUS_CODE_RESOURCE_EXHAUSTED(8),
        /**
         * <code>DEPRECATED_STATUS_CODE_FAILED_PRECONDITION = 9;</code>
         */
        DEPRECATED_STATUS_CODE_FAILED_PRECONDITION(9),
        /**
         * <code>DEPRECATED_STATUS_CODE_ABORTED = 10;</code>
         */
        DEPRECATED_STATUS_CODE_ABORTED(10),
        /**
         * <code>DEPRECATED_STATUS_CODE_OUT_OF_RANGE = 11;</code>
         */
        DEPRECATED_STATUS_CODE_OUT_OF_RANGE(11),
        /**
         * <code>DEPRECATED_STATUS_CODE_UNIMPLEMENTED = 12;</code>
         */
        DEPRECATED_STATUS_CODE_UNIMPLEMENTED(12),
        /**
         * <code>DEPRECATED_STATUS_CODE_INTERNAL_ERROR = 13;</code>
         */
        DEPRECATED_STATUS_CODE_INTERNAL_ERROR(13),
        /**
         * <code>DEPRECATED_STATUS_CODE_UNAVAILABLE = 14;</code>
         */
        DEPRECATED_STATUS_CODE_UNAVAILABLE(14),
        /**
         * <code>DEPRECATED_STATUS_CODE_DATA_LOSS = 15;</code>
         */
        DEPRECATED_STATUS_CODE_DATA_LOSS(15),
        /**
         * <code>DEPRECATED_STATUS_CODE_UNAUTHENTICATED = 16;</code>
         */
        DEPRECATED_STATUS_CODE_UNAUTHENTICATED(16),
        UNRECOGNIZED(-1),
        ;

        /**
         * <code>DEPRECATED_STATUS_CODE_OK = 0;</code>
         */
        public static final int DEPRECATED_STATUS_CODE_OK_VALUE = 0;
        /**
         * <code>DEPRECATED_STATUS_CODE_CANCELLED = 1;</code>
         */
        public static final int DEPRECATED_STATUS_CODE_CANCELLED_VALUE = 1;
        /**
         * <code>DEPRECATED_STATUS_CODE_UNKNOWN_ERROR = 2;</code>
         */
        public static final int DEPRECATED_STATUS_CODE_UNKNOWN_ERROR_VALUE = 2;
        /**
         * <code>DEPRECATED_STATUS_CODE_INVALID_ARGUMENT = 3;</code>
         */
        public static final int DEPRECATED_STATUS_CODE_INVALID_ARGUMENT_VALUE = 3;
        /**
         * <code>DEPRECATED_STATUS_CODE_DEADLINE_EXCEEDED = 4;</code>
         */
        public static final int DEPRECATED_STATUS_CODE_DEADLINE_EXCEEDED_VALUE = 4;
        /**
         * <code>DEPRECATED_STATUS_CODE_NOT_FOUND = 5;</code>
         */
        public static final int DEPRECATED_STATUS_CODE_NOT_FOUND_VALUE = 5;
        /**
         * <code>DEPRECATED_STATUS_CODE_ALREADY_EXISTS = 6;</code>
         */
        public static final int DEPRECATED_STATUS_CODE_ALREADY_EXISTS_VALUE = 6;
        /**
         * <code>DEPRECATED_STATUS_CODE_PERMISSION_DENIED = 7;</code>
         */
        public static final int DEPRECATED_STATUS_CODE_PERMISSION_DENIED_VALUE = 7;
        /**
         * <code>DEPRECATED_STATUS_CODE_RESOURCE_EXHAUSTED = 8;</code>
         */
        public static final int DEPRECATED_STATUS_CODE_RESOURCE_EXHAUSTED_VALUE = 8;
        /**
         * <code>DEPRECATED_STATUS_CODE_FAILED_PRECONDITION = 9;</code>
         */
        public static final int DEPRECATED_STATUS_CODE_FAILED_PRECONDITION_VALUE = 9;
        /**
         * <code>DEPRECATED_STATUS_CODE_ABORTED = 10;</code>
         */
        public static final int DEPRECATED_STATUS_CODE_ABORTED_VALUE = 10;
        /**
         * <code>DEPRECATED_STATUS_CODE_OUT_OF_RANGE = 11;</code>
         */
        public static final int DEPRECATED_STATUS_CODE_OUT_OF_RANGE_VALUE = 11;
        /**
         * <code>DEPRECATED_STATUS_CODE_UNIMPLEMENTED = 12;</code>
         */
        public static final int DEPRECATED_STATUS_CODE_UNIMPLEMENTED_VALUE = 12;
        /**
         * <code>DEPRECATED_STATUS_CODE_INTERNAL_ERROR = 13;</code>
         */
        public static final int DEPRECATED_STATUS_CODE_INTERNAL_ERROR_VALUE = 13;
        /**
         * <code>DEPRECATED_STATUS_CODE_UNAVAILABLE = 14;</code>
         */
        public static final int DEPRECATED_STATUS_CODE_UNAVAILABLE_VALUE = 14;
        /**
         * <code>DEPRECATED_STATUS_CODE_DATA_LOSS = 15;</code>
         */
        public static final int DEPRECATED_STATUS_CODE_DATA_LOSS_VALUE = 15;
        /**
         * <code>DEPRECATED_STATUS_CODE_UNAUTHENTICATED = 16;</code>
         */
        public static final int DEPRECATED_STATUS_CODE_UNAUTHENTICATED_VALUE = 16;


        public final int getNumber() {
            if (this == UNRECOGNIZED) {
                throw new IllegalArgumentException(
                        "Can't get the number of an unknown enum value.");
            }
            return value;
        }

        /**
         * @param value The numeric wire value of the corresponding enum entry.
         * @return The enum associated with the given numeric wire value.
         * @deprecated Use {@link #forNumber(int)} instead.
         */
        @Deprecated
        public static DeprecatedStatusCode valueOf(int value) {
            return forNumber(value);
        }

        /**
         * @param value The numeric wire value of the corresponding enum entry.
         * @return The enum associated with the given numeric wire value.
         */
        public static DeprecatedStatusCode forNumber(int value) {
            switch (value) {
                case 0:
                    return DEPRECATED_STATUS_CODE_OK;
                case 1:
                    return DEPRECATED_STATUS_CODE_CANCELLED;
                case 2:
                    return DEPRECATED_STATUS_CODE_UNKNOWN_ERROR;
                case 3:
                    return DEPRECATED_STATUS_CODE_INVALID_ARGUMENT;
                case 4:
                    return DEPRECATED_STATUS_CODE_DEADLINE_EXCEEDED;
                case 5:
                    return DEPRECATED_STATUS_CODE_NOT_FOUND;
                case 6:
                    return DEPRECATED_STATUS_CODE_ALREADY_EXISTS;
                case 7:
                    return DEPRECATED_STATUS_CODE_PERMISSION_DENIED;
                case 8:
                    return DEPRECATED_STATUS_CODE_RESOURCE_EXHAUSTED;
                case 9:
                    return DEPRECATED_STATUS_CODE_FAILED_PRECONDITION;
                case 10:
                    return DEPRECATED_STATUS_CODE_ABORTED;
                case 11:
                    return DEPRECATED_STATUS_CODE_OUT_OF_RANGE;
                case 12:
                    return DEPRECATED_STATUS_CODE_UNIMPLEMENTED;
                case 13:
                    return DEPRECATED_STATUS_CODE_INTERNAL_ERROR;
                case 14:
                    return DEPRECATED_STATUS_CODE_UNAVAILABLE;
                case 15:
                    return DEPRECATED_STATUS_CODE_DATA_LOSS;
                case 16:
                    return DEPRECATED_STATUS_CODE_UNAUTHENTICATED;
                default:
                    return null;
            }
        }

        public static com.google.protobuf.Internal.EnumLiteMap<DeprecatedStatusCode>
        internalGetValueMap() {
            return internalValueMap;
        }

        private static final com.google.protobuf.Internal.EnumLiteMap<
                DeprecatedStatusCode> internalValueMap =
                new com.google.protobuf.Internal.EnumLiteMap<DeprecatedStatusCode>() {
                    public DeprecatedStatusCode findValueByNumber(int number) {
                        return DeprecatedStatusCode.forNumber(number);
                    }
                };

        public final com.google.protobuf.Descriptors.EnumValueDescriptor
        getValueDescriptor() {
            if (this == UNRECOGNIZED) {
                throw new IllegalStateException(
                        "Can't get the descriptor of an unrecognized enum value.");
            }
            return getDescriptor().getValues().get(ordinal());
        }

        public final com.google.protobuf.Descriptors.EnumDescriptor
        getDescriptorForType() {
            return getDescriptor();
        }

        public static final com.google.protobuf.Descriptors.EnumDescriptor
        getDescriptor() {
            return Status.getDescriptor().getEnumTypes().get(0);
        }

        private static final DeprecatedStatusCode[] VALUES = values();

        public static DeprecatedStatusCode valueOf(
                com.google.protobuf.Descriptors.EnumValueDescriptor desc) {
            if (desc.getType() != getDescriptor()) {
                throw new IllegalArgumentException(
                        "EnumValueDescriptor is not for this type.");
            }
            if (desc.getIndex() == -1) {
                return UNRECOGNIZED;
            }
            return VALUES[desc.getIndex()];
        }

        private final int value;

        private DeprecatedStatusCode(int value) {
            this.value = value;
        }

        // @@protoc_insertion_point(enum_scope:opentelemetry.proto.trace.v1.Status.DeprecatedStatusCode)
    }

    /**
     * <pre>
     * For the semantics of status codes see
     * https://github.com/open-telemetry/opentelemetry-specification/blob/main/specification/trace/api.md#set-status
     * </pre>
     * <p>
     * Protobuf enum {@code opentelemetry.proto.trace.v1.Status.StatusCode}
     */
    public enum StatusCode
            implements com.google.protobuf.ProtocolMessageEnum {
        /**
         * <pre>
         * The default status.
         * </pre>
         *
         * <code>STATUS_CODE_UNSET = 0;</code>
         */
        STATUS_CODE_UNSET(0),
        /**
         * <pre>
         * The Span has been validated by an Application developers or Operator to have
         * completed successfully.
         * </pre>
         *
         * <code>STATUS_CODE_OK = 1;</code>
         */
        STATUS_CODE_OK(1),
        /**
         * <pre>
         * The Span contains an error.
         * </pre>
         *
         * <code>STATUS_CODE_ERROR = 2;</code>
         */
        STATUS_CODE_ERROR(2),
        UNRECOGNIZED(-1),
        ;

        /**
         * <pre>
         * The default status.
         * </pre>
         *
         * <code>STATUS_CODE_UNSET = 0;</code>
         */
        public static final int STATUS_CODE_UNSET_VALUE = 0;
        /**
         * <pre>
         * The Span has been validated by an Application developers or Operator to have
         * completed successfully.
         * </pre>
         *
         * <code>STATUS_CODE_OK = 1;</code>
         */
        public static final int STATUS_CODE_OK_VALUE = 1;
        /**
         * <pre>
         * The Span contains an error.
         * </pre>
         *
         * <code>STATUS_CODE_ERROR = 2;</code>
         */
        public static final int STATUS_CODE_ERROR_VALUE = 2;


        public final int getNumber() {
            if (this == UNRECOGNIZED) {
                throw new IllegalArgumentException(
                        "Can't get the number of an unknown enum value.");
            }
            return value;
        }

        /**
         * @param value The numeric wire value of the corresponding enum entry.
         * @return The enum associated with the given numeric wire value.
         * @deprecated Use {@link #forNumber(int)} instead.
         */
        @Deprecated
        public static StatusCode valueOf(int value) {
            return forNumber(value);
        }

        /**
         * @param value The numeric wire value of the corresponding enum entry.
         * @return The enum associated with the given numeric wire value.
         */
        public static StatusCode forNumber(int value) {
            switch (value) {
                case 0:
                    return STATUS_CODE_UNSET;
                case 1:
                    return STATUS_CODE_OK;
                case 2:
                    return STATUS_CODE_ERROR;
                default:
                    return null;
            }
        }

        public static com.google.protobuf.Internal.EnumLiteMap<StatusCode>
        internalGetValueMap() {
            return internalValueMap;
        }

        private static final com.google.protobuf.Internal.EnumLiteMap<
                StatusCode> internalValueMap =
                new com.google.protobuf.Internal.EnumLiteMap<StatusCode>() {
                    public StatusCode findValueByNumber(int number) {
                        return StatusCode.forNumber(number);
                    }
                };

        public final com.google.protobuf.Descriptors.EnumValueDescriptor
        getValueDescriptor() {
            if (this == UNRECOGNIZED) {
                throw new IllegalStateException(
                        "Can't get the descriptor of an unrecognized enum value.");
            }
            return getDescriptor().getValues().get(ordinal());
        }

        public final com.google.protobuf.Descriptors.EnumDescriptor
        getDescriptorForType() {
            return getDescriptor();
        }

        public static final com.google.protobuf.Descriptors.EnumDescriptor
        getDescriptor() {
            return Status.getDescriptor().getEnumTypes().get(1);
        }

        private static final StatusCode[] VALUES = values();

        public static StatusCode valueOf(
                com.google.protobuf.Descriptors.EnumValueDescriptor desc) {
            if (desc.getType() != getDescriptor()) {
                throw new IllegalArgumentException(
                        "EnumValueDescriptor is not for this type.");
            }
            if (desc.getIndex() == -1) {
                return UNRECOGNIZED;
            }
            return VALUES[desc.getIndex()];
        }

        private final int value;

        private StatusCode(int value) {
            this.value = value;
        }

        // @@protoc_insertion_point(enum_scope:opentelemetry.proto.trace.v1.Status.StatusCode)
    }

    public static final int DEPRECATED_CODE_FIELD_NUMBER = 1;
    private int deprecatedCode_;

    /**
     * <pre>
     * The deprecated status code. This is an optional field.
     * This field is deprecated and is replaced by the `code` field below. See backward
     * compatibility notes below. According to our stability guarantees this field
     * will be removed in 12 months, on Oct 22, 2021. All usage of old senders and
     * receivers that do not understand the `code` field MUST be phased out by then.
     * </pre>
     *
     * <code>.opentelemetry.proto.trace.v1.Status.DeprecatedStatusCode deprecated_code = 1 [deprecated = true];</code>
     *
     * @return The enum numeric value on the wire for deprecatedCode.
     */
    @Override
    @Deprecated
    public int getDeprecatedCodeValue() {
        return deprecatedCode_;
    }

    /**
     * <pre>
     * The deprecated status code. This is an optional field.
     * This field is deprecated and is replaced by the `code` field below. See backward
     * compatibility notes below. According to our stability guarantees this field
     * will be removed in 12 months, on Oct 22, 2021. All usage of old senders and
     * receivers that do not understand the `code` field MUST be phased out by then.
     * </pre>
     *
     * <code>.opentelemetry.proto.trace.v1.Status.DeprecatedStatusCode deprecated_code = 1 [deprecated = true];</code>
     *
     * @return The deprecatedCode.
     */
    @Override
    @Deprecated
    public DeprecatedStatusCode getDeprecatedCode() {
        @SuppressWarnings("deprecation")
        DeprecatedStatusCode result = DeprecatedStatusCode.valueOf(deprecatedCode_);
        return result == null ? DeprecatedStatusCode.UNRECOGNIZED : result;
    }

    public static final int MESSAGE_FIELD_NUMBER = 2;
    private volatile Object message_;

    /**
     * <pre>
     * A developer-facing human readable error message.
     * </pre>
     *
     * <code>string message = 2;</code>
     *
     * @return The message.
     */
    @Override
    public String getMessage() {
        Object ref = message_;
        if (ref instanceof String) {
            return (String) ref;
        } else {
            com.google.protobuf.ByteString bs =
                    (com.google.protobuf.ByteString) ref;
            String s = bs.toStringUtf8();
            message_ = s;
            return s;
        }
    }

    /**
     * <pre>
     * A developer-facing human readable error message.
     * </pre>
     *
     * <code>string message = 2;</code>
     *
     * @return The bytes for message.
     */
    @Override
    public com.google.protobuf.ByteString
    getMessageBytes() {
        Object ref = message_;
        if (ref instanceof String) {
            com.google.protobuf.ByteString b =
                    com.google.protobuf.ByteString.copyFromUtf8(
                            (String) ref);
            message_ = b;
            return b;
        } else {
            return (com.google.protobuf.ByteString) ref;
        }
    }

    public static final int CODE_FIELD_NUMBER = 3;
    private int code_;

    /**
     * <pre>
     * The status code.
     * </pre>
     *
     * <code>.opentelemetry.proto.trace.v1.Status.StatusCode code = 3;</code>
     *
     * @return The enum numeric value on the wire for code.
     */
    @Override
    public int getCodeValue() {
        return code_;
    }

    /**
     * <pre>
     * The status code.
     * </pre>
     *
     * <code>.opentelemetry.proto.trace.v1.Status.StatusCode code = 3;</code>
     *
     * @return The code.
     */
    @Override
    public StatusCode getCode() {
        @SuppressWarnings("deprecation")
        StatusCode result = StatusCode.valueOf(code_);
        return result == null ? StatusCode.UNRECOGNIZED : result;
    }

    private byte memoizedIsInitialized = -1;

    @Override
    public final boolean isInitialized() {
        byte isInitialized = memoizedIsInitialized;
        if (isInitialized == 1) return true;
        if (isInitialized == 0) return false;

        memoizedIsInitialized = 1;
        return true;
    }

    @Override
    public void writeTo(com.google.protobuf.CodedOutputStream output)
            throws java.io.IOException {
        if (deprecatedCode_ != DeprecatedStatusCode.DEPRECATED_STATUS_CODE_OK.getNumber()) {
            output.writeEnum(1, deprecatedCode_);
        }
        if (!getMessageBytes().isEmpty()) {
            com.google.protobuf.GeneratedMessageV3.writeString(output, 2, message_);
        }
        if (code_ != StatusCode.STATUS_CODE_UNSET.getNumber()) {
            output.writeEnum(3, code_);
        }
        unknownFields.writeTo(output);
    }

    @Override
    public int getSerializedSize() {
        int size = memoizedSize;
        if (size != -1) return size;

        size = 0;
        if (deprecatedCode_ != DeprecatedStatusCode.DEPRECATED_STATUS_CODE_OK.getNumber()) {
            size += com.google.protobuf.CodedOutputStream
                    .computeEnumSize(1, deprecatedCode_);
        }
        if (!getMessageBytes().isEmpty()) {
            size += com.google.protobuf.GeneratedMessageV3.computeStringSize(2, message_);
        }
        if (code_ != StatusCode.STATUS_CODE_UNSET.getNumber()) {
            size += com.google.protobuf.CodedOutputStream
                    .computeEnumSize(3, code_);
        }
        size += unknownFields.getSerializedSize();
        memoizedSize = size;
        return size;
    }

    @Override
    public boolean equals(final Object obj) {
        if (obj == this) {
            return true;
        }
        if (!(obj instanceof Status)) {
            return super.equals(obj);
        }
        Status other = (Status) obj;

        if (deprecatedCode_ != other.deprecatedCode_) return false;
        if (!getMessage()
                .equals(other.getMessage())) return false;
        if (code_ != other.code_) return false;
        if (!unknownFields.equals(other.unknownFields)) return false;
        return true;
    }

    @Override
    public int hashCode() {
        if (memoizedHashCode != 0) {
            return memoizedHashCode;
        }
        int hash = 41;
        hash = (19 * hash) + getDescriptor().hashCode();
        hash = (37 * hash) + DEPRECATED_CODE_FIELD_NUMBER;
        hash = (53 * hash) + deprecatedCode_;
        hash = (37 * hash) + MESSAGE_FIELD_NUMBER;
        hash = (53 * hash) + getMessage().hashCode();
        hash = (37 * hash) + CODE_FIELD_NUMBER;
        hash = (53 * hash) + code_;
        hash = (29 * hash) + unknownFields.hashCode();
        memoizedHashCode = hash;
        return hash;
    }

    public static Status parseFrom(
            java.nio.ByteBuffer data)
            throws com.google.protobuf.InvalidProtocolBufferException {
        return PARSER.parseFrom(data);
    }

    public static Status parseFrom(
            java.nio.ByteBuffer data,
            com.google.protobuf.ExtensionRegistryLite extensionRegistry)
            throws com.google.protobuf.InvalidProtocolBufferException {
        return PARSER.parseFrom(data, extensionRegistry);
    }

    public static Status parseFrom(
            com.google.protobuf.ByteString data)
            throws com.google.protobuf.InvalidProtocolBufferException {
        return PARSER.parseFrom(data);
    }

    public static Status parseFrom(
            com.google.protobuf.ByteString data,
            com.google.protobuf.ExtensionRegistryLite extensionRegistry)
            throws com.google.protobuf.InvalidProtocolBufferException {
        return PARSER.parseFrom(data, extensionRegistry);
    }

    public static Status parseFrom(byte[] data)
            throws com.google.protobuf.InvalidProtocolBufferException {
        return PARSER.parseFrom(data);
    }

    public static Status parseFrom(
            byte[] data,
            com.google.protobuf.ExtensionRegistryLite extensionRegistry)
            throws com.google.protobuf.InvalidProtocolBufferException {
        return PARSER.parseFrom(data, extensionRegistry);
    }

    public static Status parseFrom(java.io.InputStream input)
            throws java.io.IOException {
        return com.google.protobuf.GeneratedMessageV3
                .parseWithIOException(PARSER, input);
    }

    public static Status parseFrom(
            java.io.InputStream input,
            com.google.protobuf.ExtensionRegistryLite extensionRegistry)
            throws java.io.IOException {
        return com.google.protobuf.GeneratedMessageV3
                .parseWithIOException(PARSER, input, extensionRegistry);
    }

    public static Status parseDelimitedFrom(java.io.InputStream input)
            throws java.io.IOException {
        return com.google.protobuf.GeneratedMessageV3
                .parseDelimitedWithIOException(PARSER, input);
    }

    public static Status parseDelimitedFrom(
            java.io.InputStream input,
            com.google.protobuf.ExtensionRegistryLite extensionRegistry)
            throws java.io.IOException {
        return com.google.protobuf.GeneratedMessageV3
                .parseDelimitedWithIOException(PARSER, input, extensionRegistry);
    }

    public static Status parseFrom(
            com.google.protobuf.CodedInputStream input)
            throws java.io.IOException {
        return com.google.protobuf.GeneratedMessageV3
                .parseWithIOException(PARSER, input);
    }

    public static Status parseFrom(
            com.google.protobuf.CodedInputStream input,
            com.google.protobuf.ExtensionRegistryLite extensionRegistry)
            throws java.io.IOException {
        return com.google.protobuf.GeneratedMessageV3
                .parseWithIOException(PARSER, input, extensionRegistry);
    }

    @Override
    public Builder newBuilderForType() {
        return newBuilder();
    }

    public static Builder newBuilder() {
        return DEFAULT_INSTANCE.toBuilder();
    }

    public static Builder newBuilder(Status prototype) {
        return DEFAULT_INSTANCE.toBuilder().mergeFrom(prototype);
    }

    @Override
    public Builder toBuilder() {
        return this == DEFAULT_INSTANCE
                ? new Builder() : new Builder().mergeFrom(this);
    }

    @Override
    protected Builder newBuilderForType(
            BuilderParent parent) {
        Builder builder = new Builder(parent);
        return builder;
    }

    /**
     * <pre>
     * The Status type defines a logical error model that is suitable for different
     * programming environments, including REST APIs and RPC APIs.
     * </pre>
     * <p>
     * Protobuf type {@code opentelemetry.proto.trace.v1.Status}
     */
    public static final class Builder extends
            com.google.protobuf.GeneratedMessageV3.Builder<Builder> implements
            // @@protoc_insertion_point(builder_implements:opentelemetry.proto.trace.v1.Status)
            StatusOrBuilder {
        public static final com.google.protobuf.Descriptors.Descriptor
        getDescriptor() {
            return TraceProto.internal_static_opentelemetry_proto_trace_v1_Status_descriptor;
        }

        @Override
        protected FieldAccessorTable
        internalGetFieldAccessorTable() {
            return TraceProto.internal_static_opentelemetry_proto_trace_v1_Status_fieldAccessorTable
                    .ensureFieldAccessorsInitialized(
                            Status.class, Builder.class);
        }

        // Construct using io.opentelemetry.proto.trace.v1.Status.newBuilder()
        private Builder() {
            maybeForceBuilderInitialization();
        }

        private Builder(
                BuilderParent parent) {
            super(parent);
            maybeForceBuilderInitialization();
        }

        private void maybeForceBuilderInitialization() {
            if (com.google.protobuf.GeneratedMessageV3
                    .alwaysUseFieldBuilders) {
            }
        }

        @Override
        public Builder clear() {
            super.clear();
            deprecatedCode_ = 0;

            message_ = "";

            code_ = 0;

            return this;
        }

        @Override
        public com.google.protobuf.Descriptors.Descriptor
        getDescriptorForType() {
            return TraceProto.internal_static_opentelemetry_proto_trace_v1_Status_descriptor;
        }

        @Override
        public Status getDefaultInstanceForType() {
            return Status.getDefaultInstance();
        }

        @Override
        public Status build() {
            Status result = buildPartial();
            if (!result.isInitialized()) {
                throw newUninitializedMessageException(result);
            }
            return result;
        }

        @Override
        public Status buildPartial() {
            Status result = new Status(this);
            result.deprecatedCode_ = deprecatedCode_;
            result.message_ = message_;
            result.code_ = code_;
            onBuilt();
            return result;
        }

        @Override
        public Builder clone() {
            return super.clone();
        }

        @Override
        public Builder setField(
                com.google.protobuf.Descriptors.FieldDescriptor field,
                Object value) {
            return super.setField(field, value);
        }

        @Override
        public Builder clearField(
                com.google.protobuf.Descriptors.FieldDescriptor field) {
            return super.clearField(field);
        }

        @Override
        public Builder clearOneof(
                com.google.protobuf.Descriptors.OneofDescriptor oneof) {
            return super.clearOneof(oneof);
        }

        @Override
        public Builder setRepeatedField(
                com.google.protobuf.Descriptors.FieldDescriptor field,
                int index, Object value) {
            return super.setRepeatedField(field, index, value);
        }

        @Override
        public Builder addRepeatedField(
                com.google.protobuf.Descriptors.FieldDescriptor field,
                Object value) {
            return super.addRepeatedField(field, value);
        }

        @Override
        public Builder mergeFrom(com.google.protobuf.Message other) {
            if (other instanceof Status) {
                return mergeFrom((Status) other);
            } else {
                super.mergeFrom(other);
                return this;
            }
        }

        public Builder mergeFrom(Status other) {
            if (other == Status.getDefaultInstance()) return this;
            if (other.deprecatedCode_ != 0) {
                setDeprecatedCodeValue(other.getDeprecatedCodeValue());
            }
            if (!other.getMessage().isEmpty()) {
                message_ = other.message_;
                onChanged();
            }
            if (other.code_ != 0) {
                setCodeValue(other.getCodeValue());
            }
            this.mergeUnknownFields(other.unknownFields);
            onChanged();
            return this;
        }

        @Override
        public final boolean isInitialized() {
            return true;
        }

        @Override
        public Builder mergeFrom(
                com.google.protobuf.CodedInputStream input,
                com.google.protobuf.ExtensionRegistryLite extensionRegistry)
                throws java.io.IOException {
            Status parsedMessage = null;
            try {
                parsedMessage = PARSER.parsePartialFrom(input, extensionRegistry);
            } catch (com.google.protobuf.InvalidProtocolBufferException e) {
                parsedMessage = (Status) e.getUnfinishedMessage();
                throw e.unwrapIOException();
            } finally {
                if (parsedMessage != null) {
                    mergeFrom(parsedMessage);
                }
            }
            return this;
        }

        private int deprecatedCode_ = 0;

        /**
         * <pre>
         * The deprecated status code. This is an optional field.
         * This field is deprecated and is replaced by the `code` field below. See backward
         * compatibility notes below. According to our stability guarantees this field
         * will be removed in 12 months, on Oct 22, 2021. All usage of old senders and
         * receivers that do not understand the `code` field MUST be phased out by then.
         * </pre>
         *
         * <code>.opentelemetry.proto.trace.v1.Status.DeprecatedStatusCode deprecated_code = 1 [deprecated = true];</code>
         *
         * @return The enum numeric value on the wire for deprecatedCode.
         */
        @Override
        @Deprecated
        public int getDeprecatedCodeValue() {
            return deprecatedCode_;
        }

        /**
         * <pre>
         * The deprecated status code. This is an optional field.
         * This field is deprecated and is replaced by the `code` field below. See backward
         * compatibility notes below. According to our stability guarantees this field
         * will be removed in 12 months, on Oct 22, 2021. All usage of old senders and
         * receivers that do not understand the `code` field MUST be phased out by then.
         * </pre>
         *
         * <code>.opentelemetry.proto.trace.v1.Status.DeprecatedStatusCode deprecated_code = 1 [deprecated = true];</code>
         *
         * @param value The enum numeric value on the wire for deprecatedCode to set.
         * @return This builder for chaining.
         */
        @Deprecated
        public Builder setDeprecatedCodeValue(int value) {

            deprecatedCode_ = value;
            onChanged();
            return this;
        }

        /**
         * <pre>
         * The deprecated status code. This is an optional field.
         * This field is deprecated and is replaced by the `code` field below. See backward
         * compatibility notes below. According to our stability guarantees this field
         * will be removed in 12 months, on Oct 22, 2021. All usage of old senders and
         * receivers that do not understand the `code` field MUST be phased out by then.
         * </pre>
         *
         * <code>.opentelemetry.proto.trace.v1.Status.DeprecatedStatusCode deprecated_code = 1 [deprecated = true];</code>
         *
         * @return The deprecatedCode.
         */
        @Override
        @Deprecated
        public DeprecatedStatusCode getDeprecatedCode() {
            @SuppressWarnings("deprecation")
            DeprecatedStatusCode result = DeprecatedStatusCode.valueOf(deprecatedCode_);
            return result == null ? DeprecatedStatusCode.UNRECOGNIZED : result;
        }

        /**
         * <pre>
         * The deprecated status code. This is an optional field.
         * This field is deprecated and is replaced by the `code` field below. See backward
         * compatibility notes below. According to our stability guarantees this field
         * will be removed in 12 months, on Oct 22, 2021. All usage of old senders and
         * receivers that do not understand the `code` field MUST be phased out by then.
         * </pre>
         *
         * <code>.opentelemetry.proto.trace.v1.Status.DeprecatedStatusCode deprecated_code = 1 [deprecated = true];</code>
         *
         * @param value The deprecatedCode to set.
         * @return This builder for chaining.
         */
        @Deprecated
        public Builder setDeprecatedCode(DeprecatedStatusCode value) {
            if (value == null) {
                throw new NullPointerException();
            }

            deprecatedCode_ = value.getNumber();
            onChanged();
            return this;
        }

        /**
         * <pre>
         * The deprecated status code. This is an optional field.
         * This field is deprecated and is replaced by the `code` field below. See backward
         * compatibility notes below. According to our stability guarantees this field
         * will be removed in 12 months, on Oct 22, 2021. All usage of old senders and
         * receivers that do not understand the `code` field MUST be phased out by then.
         * </pre>
         *
         * <code>.opentelemetry.proto.trace.v1.Status.DeprecatedStatusCode deprecated_code = 1 [deprecated = true];</code>
         *
         * @return This builder for chaining.
         */
        @Deprecated
        public Builder clearDeprecatedCode() {

            deprecatedCode_ = 0;
            onChanged();
            return this;
        }

        private Object message_ = "";

        /**
         * <pre>
         * A developer-facing human readable error message.
         * </pre>
         *
         * <code>string message = 2;</code>
         *
         * @return The message.
         */
        public String getMessage() {
            Object ref = message_;
            if (!(ref instanceof String)) {
                com.google.protobuf.ByteString bs =
                        (com.google.protobuf.ByteString) ref;
                String s = bs.toStringUtf8();
                message_ = s;
                return s;
            } else {
                return (String) ref;
            }
        }

        /**
         * <pre>
         * A developer-facing human readable error message.
         * </pre>
         *
         * <code>string message = 2;</code>
         *
         * @return The bytes for message.
         */
        public com.google.protobuf.ByteString
        getMessageBytes() {
            Object ref = message_;
            if (ref instanceof String) {
                com.google.protobuf.ByteString b =
                        com.google.protobuf.ByteString.copyFromUtf8(
                                (String) ref);
                message_ = b;
                return b;
            } else {
                return (com.google.protobuf.ByteString) ref;
            }
        }

        /**
         * <pre>
         * A developer-facing human readable error message.
         * </pre>
         *
         * <code>string message = 2;</code>
         *
         * @param value The message to set.
         * @return This builder for chaining.
         */
        public Builder setMessage(
                String value) {
            if (value == null) {
                throw new NullPointerException();
            }

            message_ = value;
            onChanged();
            return this;
        }

        /**
         * <pre>
         * A developer-facing human readable error message.
         * </pre>
         *
         * <code>string message = 2;</code>
         *
         * @return This builder for chaining.
         */
        public Builder clearMessage() {

            message_ = getDefaultInstance().getMessage();
            onChanged();
            return this;
        }

        /**
         * <pre>
         * A developer-facing human readable error message.
         * </pre>
         *
         * <code>string message = 2;</code>
         *
         * @param value The bytes for message to set.
         * @return This builder for chaining.
         */
        public Builder setMessageBytes(
                com.google.protobuf.ByteString value) {
            if (value == null) {
                throw new NullPointerException();
            }
            checkByteStringIsUtf8(value);

            message_ = value;
            onChanged();
            return this;
        }

        private int code_ = 0;

        /**
         * <pre>
         * The status code.
         * </pre>
         *
         * <code>.opentelemetry.proto.trace.v1.Status.StatusCode code = 3;</code>
         *
         * @return The enum numeric value on the wire for code.
         */
        @Override
        public int getCodeValue() {
            return code_;
        }

        /**
         * <pre>
         * The status code.
         * </pre>
         *
         * <code>.opentelemetry.proto.trace.v1.Status.StatusCode code = 3;</code>
         *
         * @param value The enum numeric value on the wire for code to set.
         * @return This builder for chaining.
         */
        public Builder setCodeValue(int value) {

            code_ = value;
            onChanged();
            return this;
        }

        /**
         * <pre>
         * The status code.
         * </pre>
         *
         * <code>.opentelemetry.proto.trace.v1.Status.StatusCode code = 3;</code>
         *
         * @return The code.
         */
        @Override
        public StatusCode getCode() {
            @SuppressWarnings("deprecation")
            StatusCode result = StatusCode.valueOf(code_);
            return result == null ? StatusCode.UNRECOGNIZED : result;
        }

        /**
         * <pre>
         * The status code.
         * </pre>
         *
         * <code>.opentelemetry.proto.trace.v1.Status.StatusCode code = 3;</code>
         *
         * @param value The code to set.
         * @return This builder for chaining.
         */
        public Builder setCode(StatusCode value) {
            if (value == null) {
                throw new NullPointerException();
            }

            code_ = value.getNumber();
            onChanged();
            return this;
        }

        /**
         * <pre>
         * The status code.
         * </pre>
         *
         * <code>.opentelemetry.proto.trace.v1.Status.StatusCode code = 3;</code>
         *
         * @return This builder for chaining.
         */
        public Builder clearCode() {

            code_ = 0;
            onChanged();
            return this;
        }

        @Override
        public final Builder setUnknownFields(
                final com.google.protobuf.UnknownFieldSet unknownFields) {
            return super.setUnknownFields(unknownFields);
        }

        @Override
        public final Builder mergeUnknownFields(
                final com.google.protobuf.UnknownFieldSet unknownFields) {
            return super.mergeUnknownFields(unknownFields);
        }


        // @@protoc_insertion_point(builder_scope:opentelemetry.proto.trace.v1.Status)
    }

    // @@protoc_insertion_point(class_scope:opentelemetry.proto.trace.v1.Status)
    private static final Status DEFAULT_INSTANCE;

    static {
        DEFAULT_INSTANCE = new Status();
    }

    public static Status getDefaultInstance() {
        return DEFAULT_INSTANCE;
    }

    private static final com.google.protobuf.Parser<Status>
            PARSER = new com.google.protobuf.AbstractParser<Status>() {
        @Override
        public Status parsePartialFrom(
                com.google.protobuf.CodedInputStream input,
                com.google.protobuf.ExtensionRegistryLite extensionRegistry)
                throws com.google.protobuf.InvalidProtocolBufferException {
            return new Status(input, extensionRegistry);
        }
    };

    public static com.google.protobuf.Parser<Status> parser() {
        return PARSER;
    }

    @Override
    public com.google.protobuf.Parser<Status> getParserForType() {
        return PARSER;
    }

    @Override
    public Status getDefaultInstanceForType() {
        return DEFAULT_INSTANCE;
    }

}

